{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, FAB, Divider, Searchbar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { useDatabase } from \"../../context/DatabaseContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar mockAnimals = [{\n  id: 1,\n  number: 'A001',\n  type: 'Корова',\n  gender: 'female'\n}, {\n  id: 2,\n  number: 'A002',\n  type: 'Бык',\n  gender: 'male'\n}, {\n  id: 3,\n  number: 'A003',\n  type: 'Телёнок',\n  gender: 'male'\n}];\nvar SimpleAnimalListScreen = function SimpleAnimalListScreen() {\n  var navigation = useNavigation();\n  var _useDatabase = useDatabase(),\n    isDbReady = _useDatabase.isDbReady;\n  var _useState = useState(mockAnimals),\n    _useState2 = _slicedToArray(_useState, 2),\n    animals = _useState2[0],\n    setAnimals = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var handleSearch = function handleSearch(query) {\n    setSearchQuery(query);\n    if (query.trim() === '') {\n      setAnimals(mockAnimals);\n    } else {\n      var filtered = mockAnimals.filter(function (animal) {\n        return animal.number.toLowerCase().includes(query.toLowerCase()) || animal.type.toLowerCase().includes(query.toLowerCase());\n      });\n      setAnimals(filtered);\n    }\n  };\n  var renderAnimalItem = function renderAnimalItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.animalItem,\n      onPress: function onPress() {\n        return alert(\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435 \" + item.number);\n      },\n      children: _jsxs(View, {\n        style: styles.animalInfo,\n        children: [_jsx(Text, {\n          style: styles.animalNumber,\n          children: item.number\n        }), _jsx(Text, {\n          style: styles.animalType,\n          children: item.type\n        }), _jsx(Text, {\n          style: styles.animalGender,\n          children: item.gender === 'male' ? 'Мужской' : 'Женский'\n        })]\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.dbStatus,\n      children: _jsxs(Text, {\n        children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0411\\u0414: \", isDbReady ? 'Готова' : 'Инициализация...']\n      })\n    }), _jsx(View, {\n      style: styles.searchContainer,\n      children: _jsx(Searchbar, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443 \\u0438\\u043B\\u0438 \\u0442\\u0438\\u043F\\u0443\",\n        onChangeText: handleSearch,\n        value: searchQuery,\n        style: styles.searchBar\n      })\n    }), _jsx(FlatList, {\n      data: animals,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderAnimalItem,\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(Divider, {});\n      },\n      contentContainerStyle: styles.listContent\n    }), _jsx(FAB, {\n      style: styles.fab,\n      icon: \"plus\",\n      onPress: function onPress() {\n        return alert('Добавление нового животного');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  dbStatus: {\n    padding: 10,\n    backgroundColor: '#E3F2FD',\n    alignItems: 'center'\n  },\n  searchContainer: {\n    padding: 16,\n    backgroundColor: '#FFFFFF',\n    borderBottomWidth: 1,\n    borderBottomColor: '#E0E0E0'\n  },\n  searchBar: {\n    elevation: 0,\n    backgroundColor: '#F5F5F5'\n  },\n  listContent: {\n    flexGrow: 1\n  },\n  animalItem: {\n    backgroundColor: '#FFFFFF',\n    padding: 16\n  },\n  animalInfo: {\n    flex: 1\n  },\n  animalNumber: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  animalType: {\n    fontSize: 14,\n    color: '#616161',\n    marginBottom: 2\n  },\n  animalGender: {\n    fontSize: 14,\n    color: '#757575'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0\n  }\n});\nexport default SimpleAnimalListScreen;","map":{"version":3,"names":["React","useState","View","FlatList","StyleSheet","TouchableOpacity","Text","FAB","Divider","Searchbar","useNavigation","useDatabase","jsx","_jsx","jsxs","_jsxs","mockAnimals","id","number","type","gender","SimpleAnimalListScreen","navigation","_useDatabase","isDbReady","_useState","_useState2","_slicedToArray","animals","setAnimals","_useState3","_useState4","searchQuery","setSearchQuery","handleSearch","query","trim","filtered","filter","animal","toLowerCase","includes","renderAnimalItem","_ref","item","style","styles","animalItem","onPress","alert","children","animalInfo","animalNumber","animalType","animalGender","container","dbStatus","searchContainer","placeholder","onChangeText","value","searchBar","data","keyExtractor","toString","renderItem","ItemSeparatorComponent","contentContainerStyle","listContent","fab","icon","create","flex","backgroundColor","padding","alignItems","borderBottomWidth","borderBottomColor","elevation","flexGrow","fontSize","fontWeight","marginBottom","color","position","margin","right","bottom"],"sources":["C:/vet-assistant/src/screens/animals/SimpleAnimalListScreen.tsx"],"sourcesContent":["// src/screens/animals/SimpleAnimalListScreen.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, FlatList, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Text, FAB, Divider, Searchbar } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useDatabase } from '../../context/DatabaseContext';\r\n\r\n// Мок-данные для первоначального тестирования\r\nconst mockAnimals = [\r\n  { id: 1, number: 'A001', type: 'Корова', gender: 'female' },\r\n  { id: 2, number: 'A002', type: 'Бык', gender: 'male' },\r\n  { id: 3, number: 'A003', type: 'Телёнок', gender: 'male' }\r\n];\r\n\r\nconst SimpleAnimalListScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { isDbReady } = useDatabase();\r\n  const [animals, setAnimals] = useState(mockAnimals);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  \r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    \r\n    if (query.trim() === '') {\r\n      setAnimals(mockAnimals);\r\n    } else {\r\n      const filtered = mockAnimals.filter(\r\n        animal => animal.number.toLowerCase().includes(query.toLowerCase()) ||\r\n                 animal.type.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      setAnimals(filtered);\r\n    }\r\n  };\r\n  \r\n  const renderAnimalItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.animalItem}\r\n      onPress={() => alert(`Выбрано животное ${item.number}`)}\r\n    >\r\n      <View style={styles.animalInfo}>\r\n        <Text style={styles.animalNumber}>{item.number}</Text>\r\n        <Text style={styles.animalType}>{item.type}</Text>\r\n        <Text style={styles.animalGender}>\r\n          {item.gender === 'male' ? 'Мужской' : 'Женский'}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.dbStatus}>\r\n        <Text>Статус БД: {isDbReady ? 'Готова' : 'Инициализация...'}</Text>\r\n      </View>\r\n      \r\n      <View style={styles.searchContainer}>\r\n        <Searchbar\r\n          placeholder=\"Поиск по номеру или типу\"\r\n          onChangeText={handleSearch}\r\n          value={searchQuery}\r\n          style={styles.searchBar}\r\n        />\r\n      </View>\r\n      \r\n      <FlatList\r\n        data={animals}\r\n        keyExtractor={item => item.id.toString()}\r\n        renderItem={renderAnimalItem}\r\n        ItemSeparatorComponent={() => <Divider />}\r\n        contentContainerStyle={styles.listContent}\r\n      />\r\n      \r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"plus\"\r\n        onPress={() => alert('Добавление нового животного')}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  dbStatus: {\r\n    padding: 10,\r\n    backgroundColor: '#E3F2FD',\r\n    alignItems: 'center',\r\n  },\r\n  searchContainer: {\r\n    padding: 16,\r\n    backgroundColor: '#FFFFFF',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#E0E0E0',\r\n  },\r\n  searchBar: {\r\n    elevation: 0,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  listContent: {\r\n    flexGrow: 1,\r\n  },\r\n  animalItem: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 16,\r\n  },\r\n  animalInfo: {\r\n    flex: 1,\r\n  },\r\n  animalNumber: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  animalType: {\r\n    fontSize: 14,\r\n    color: '#616161',\r\n    marginBottom: 2,\r\n  },\r\n  animalGender: {\r\n    fontSize: 14,\r\n    color: '#757575',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nexport default SimpleAnimalListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}