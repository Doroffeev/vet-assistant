{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Card, List, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DirectoriesScreen = function DirectoriesScreen() {\n  var navigation = useNavigation();\n  var directories = [{\n    id: 'executors',\n    title: 'Исполнители',\n    description: 'Ветеринары и другие сотрудники',\n    icon: 'account-group',\n    navigate: function navigate() {\n      return navigation.navigate('ExecutorList');\n    }\n  }, {\n    id: 'diseases',\n    title: 'Заболевания',\n    description: 'Справочник заболеваний',\n    icon: 'virus',\n    navigate: function navigate() {\n      return navigation.navigate('DiseaseList');\n    }\n  }, {\n    id: 'bulls',\n    title: 'Быки',\n    description: 'Справочник быков для осеменения',\n    icon: 'cow',\n    navigate: function navigate() {\n      return navigation.navigate('BullList');\n    }\n  }, {\n    id: 'vaccines',\n    title: 'Вакцины',\n    description: 'Справочник вакцин',\n    icon: 'needle',\n    navigate: function navigate() {\n      return navigation.navigate('VaccineList');\n    }\n  }, {\n    id: 'medicines',\n    title: 'Лекарства',\n    description: 'Справочник лекарственных препаратов',\n    icon: 'pill',\n    navigate: function navigate() {\n      return navigation.navigate('MedicineList');\n    }\n  }];\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\\u0438\"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\\u0430\\u043C\\u0438 \\u0434\\u043B\\u044F \\u0432\\u0435\\u0442\\u0435\\u0440\\u0438\\u043D\\u0430\\u0440\\u043D\\u044B\\u0445 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439\"\n        }), _jsx(View, {\n          style: styles.directoriesContainer,\n          children: directories.map(function (item) {\n            return _jsx(TouchableOpacity, {\n              style: styles.directoryItem,\n              onPress: item.navigate,\n              children: _jsx(List.Item, {\n                title: item.title,\n                description: item.description,\n                left: function left() {\n                  return _jsx(Avatar.Icon, {\n                    size: 40,\n                    icon: item.icon,\n                    style: styles.icon\n                  });\n                },\n                right: function right() {\n                  return _jsx(List.Icon, {\n                    icon: \"chevron-right\"\n                  });\n                },\n                style: styles.listItem\n              })\n            }, item.id);\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  card: {\n    margin: 16,\n    elevation: 2\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#424242'\n  },\n  description: {\n    fontSize: 14,\n    color: '#757575',\n    marginBottom: 16\n  },\n  directoriesContainer: {\n    marginTop: 8\n  },\n  directoryItem: {\n    marginBottom: 8,\n    backgroundColor: '#F5F5F5',\n    borderRadius: 8,\n    overflow: 'hidden'\n  },\n  icon: {\n    backgroundColor: '#2196F3'\n  },\n  listItem: {\n    padding: 0\n  }\n});\nexport default DirectoriesScreen;","map":{"version":3,"names":["React","View","StyleSheet","ScrollView","TouchableOpacity","Text","Card","List","Avatar","useNavigation","jsx","_jsx","jsxs","_jsxs","DirectoriesScreen","navigation","directories","id","title","description","icon","navigate","style","styles","container","children","card","Content","sectionTitle","directoriesContainer","map","item","directoryItem","onPress","Item","left","Icon","size","right","listItem","create","flex","backgroundColor","margin","elevation","fontSize","fontWeight","marginBottom","color","marginTop","borderRadius","overflow","padding"],"sources":["C:/vet-assistant/src/screens/directories/DirectoriesScreen.tsx"],"sourcesContent":["// src/screens/directories/DirectoriesScreen.tsx\r\nimport React from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Text, Card, List, Avatar } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { DirectoriesStackParamList } from '../../navigation/MainNavigator';\r\n\r\ntype DirectoriesScreenNavigationProp = NativeStackNavigationProp<DirectoriesStackParamList, 'Directories'>;\r\n\r\nconst DirectoriesScreen: React.FC = () => {\r\n  const navigation = useNavigation<DirectoriesScreenNavigationProp>();\r\n\r\n  const directories = [\r\n    {\r\n      id: 'executors',\r\n      title: 'Исполнители',\r\n      description: 'Ветеринары и другие сотрудники',\r\n      icon: 'account-group',\r\n      navigate: () => navigation.navigate('ExecutorList'),\r\n    },\r\n    {\r\n      id: 'diseases',\r\n      title: 'Заболевания',\r\n      description: 'Справочник заболеваний',\r\n      icon: 'virus',\r\n      navigate: () => navigation.navigate('DiseaseList'),\r\n    },\r\n    {\r\n      id: 'bulls',\r\n      title: 'Быки',\r\n      description: 'Справочник быков для осеменения',\r\n      icon: 'cow',\r\n      navigate: () => navigation.navigate('BullList'),\r\n    },\r\n    {\r\n      id: 'vaccines',\r\n      title: 'Вакцины',\r\n      description: 'Справочник вакцин',\r\n      icon: 'needle',\r\n      navigate: () => navigation.navigate('VaccineList'),\r\n    },\r\n    {\r\n      id: 'medicines',\r\n      title: 'Лекарства',\r\n      description: 'Справочник лекарственных препаратов',\r\n      icon: 'pill',\r\n      navigate: () => navigation.navigate('MedicineList'),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Text style={styles.sectionTitle}>Справочники</Text>\r\n          <Text style={styles.description}>\r\n            Управление справочниками для ветеринарных операций\r\n          </Text>\r\n          \r\n          <View style={styles.directoriesContainer}>\r\n            {directories.map((item) => (\r\n              <TouchableOpacity\r\n                key={item.id}\r\n                style={styles.directoryItem}\r\n                onPress={item.navigate}\r\n              >\r\n                <List.Item\r\n                  title={item.title}\r\n                  description={item.description}\r\n                  left={() => <Avatar.Icon size={40} icon={item.icon} style={styles.icon} />}\r\n                  right={() => <List.Icon icon=\"chevron-right\" />}\r\n                  style={styles.listItem}\r\n                />\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  card: {\r\n    margin: 16,\r\n    elevation: 2,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n    color: '#424242',\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    color: '#757575',\r\n    marginBottom: 16,\r\n  },\r\n  directoriesContainer: {\r\n    marginTop: 8,\r\n  },\r\n  directoryItem: {\r\n    marginBottom: 8,\r\n    backgroundColor: '#F5F5F5',\r\n    borderRadius: 8,\r\n    overflow: 'hidden',\r\n  },\r\n  icon: {\r\n    backgroundColor: '#2196F3',\r\n  },\r\n  listItem: {\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nexport default DirectoriesScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}