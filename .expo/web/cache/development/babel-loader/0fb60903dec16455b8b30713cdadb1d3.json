{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, FAB, Divider, Card, Chip } from 'react-native-paper';\nimport { useDatabase } from \"../../../DatabaseContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar mockOperations = [{\n  id: 1,\n  type: 'Лечение',\n  date: '2023-05-10',\n  animalNumber: 'A001',\n  animalType: 'Корова'\n}, {\n  id: 2,\n  type: 'Осеменение',\n  date: '2023-05-12',\n  animalNumber: 'A001',\n  animalType: 'Корова'\n}, {\n  id: 3,\n  type: 'Вакцинация',\n  date: '2023-05-15',\n  animalNumber: 'A002',\n  animalType: 'Бык'\n}];\nvar SimpleCalendarScreen = function SimpleCalendarScreen() {\n  var _useDatabase = useDatabase(),\n    isDbReady = _useDatabase.isDbReady;\n  var _useState = useState(mockOperations),\n    _useState2 = _slicedToArray(_useState, 1),\n    operations = _useState2[0];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"\\u041A\\u0430\\u043B\\u0435\\u043D\\u0434\\u0430\\u0440\\u044C \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439\"\n      }), _jsxs(Chip, {\n        icon: \"database\",\n        children: [\"\\u0411\\u0414: \", isDbReady ? 'Готова' : 'Загрузка...']\n      })]\n    }), _jsx(FlatList, {\n      data: operations,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Card, {\n          style: styles.operationCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Text, {\n              style: styles.operationType,\n              children: item.type\n            }), _jsxs(Text, {\n              style: styles.operationDate,\n              children: [\"\\u0414\\u0430\\u0442\\u0430: \", item.date]\n            }), _jsxs(Text, {\n              style: styles.animalInfo,\n              children: [\"\\u0416\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435: \", item.animalNumber, \" (\", item.animalType, \")\"]\n            })]\n          })\n        });\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(View, {\n          style: styles.separator\n        });\n      },\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsx(View, {\n          style: styles.emptyContainer,\n          children: _jsx(Text, {\n            style: styles.emptyText,\n            children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u043F\\u043B\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439\"\n          })\n        });\n      }\n    }), _jsx(FAB, {\n      style: styles.fab,\n      icon: \"plus\",\n      onPress: function onPress() {\n        return alert('Добавление новой операции');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#FFFFFF',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#E0E0E0'\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  operationCard: {\n    margin: 8,\n    marginHorizontal: 16\n  },\n  operationType: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  operationDate: {\n    fontSize: 14,\n    color: '#616161',\n    marginBottom: 2\n  },\n  animalInfo: {\n    fontSize: 14,\n    color: '#757575'\n  },\n  separator: {\n    height: 8\n  },\n  emptyContainer: {\n    padding: 32,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#757575'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0\n  }\n});\nexport default SimpleCalendarScreen;","map":{"version":3,"names":["React","useState","View","FlatList","StyleSheet","Text","FAB","Divider","Card","Chip","useDatabase","jsx","_jsx","jsxs","_jsxs","mockOperations","id","type","date","animalNumber","animalType","SimpleCalendarScreen","_useDatabase","isDbReady","_useState","_useState2","_slicedToArray","operations","style","styles","container","children","header","headerTitle","icon","data","keyExtractor","item","toString","renderItem","_ref","operationCard","Content","operationType","operationDate","animalInfo","ItemSeparatorComponent","separator","ListEmptyComponent","emptyContainer","emptyText","fab","onPress","alert","create","flex","backgroundColor","padding","flexDirection","justifyContent","alignItems","borderBottomWidth","borderBottomColor","fontSize","fontWeight","margin","marginHorizontal","marginBottom","color","height","position","right","bottom"],"sources":["C:/vet-assistant/src/screens/calendar/SimpleCalendarScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, FlatList, StyleSheet } from 'react-native';\r\nimport { Text, FAB, Divider, Card, Chip } from 'react-native-paper';\r\nimport { useDatabase } from '../../../DatabaseContext';\r\n\r\n// Мок-данные для операций\r\nconst mockOperations = [\r\n  { id: 1, type: 'Лечение', date: '2023-05-10', animalNumber: 'A001', animalType: 'Корова' },\r\n  { id: 2, type: 'Осеменение', date: '2023-05-12', animalNumber: 'A001', animalType: 'Корова' },\r\n  { id: 3, type: 'Вакцинация', date: '2023-05-15', animalNumber: 'A002', animalType: 'Бык' }\r\n];\r\n\r\nconst SimpleCalendarScreen = () => {\r\n  const { isDbReady } = useDatabase();\r\n  const [operations] = useState(mockOperations);\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Календарь операций</Text>\r\n        <Chip icon=\"database\">\r\n          БД: {isDbReady ? 'Готова' : 'Загрузка...'}\r\n        </Chip>\r\n      </View>\r\n      \r\n      <FlatList\r\n        data={operations}\r\n        keyExtractor={item => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <Card style={styles.operationCard}>\r\n            <Card.Content>\r\n              <Text style={styles.operationType}>{item.type}</Text>\r\n              <Text style={styles.operationDate}>Дата: {item.date}</Text>\r\n              <Text style={styles.animalInfo}>\r\n                Животное: {item.animalNumber} ({item.animalType})\r\n              </Text>\r\n            </Card.Content>\r\n          </Card>\r\n        )}\r\n        ItemSeparatorComponent={() => <View style={styles.separator} />}\r\n        ListEmptyComponent={() => (\r\n          <View style={styles.emptyContainer}>\r\n            <Text style={styles.emptyText}>Нет запланированных операций</Text>\r\n          </View>\r\n        )}\r\n      />\r\n      \r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"plus\"\r\n        onPress={() => alert('Добавление новой операции')}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    backgroundColor: '#FFFFFF',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#E0E0E0',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  operationCard: {\r\n    margin: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  operationType: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  operationDate: {\r\n    fontSize: 14,\r\n    color: '#616161',\r\n    marginBottom: 2,\r\n  },\r\n  animalInfo: {\r\n    fontSize: 14,\r\n    color: '#757575',\r\n  },\r\n  separator: {\r\n    height: 8,\r\n  },\r\n  emptyContainer: {\r\n    padding: 32,\r\n    alignItems: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#757575',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nexport default SimpleCalendarScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}