{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, Divider, Button, FAB, Portal, List, Chip } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { getAnimalById, deleteAnimal } from \"../../database/repositories/AnimalRepository\";\nimport { getOperationsByAnimalId } from \"../../database/repositories/OperationRepository\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport ErrorScreen from \"../../components/ErrorScreen\";\nimport EmptyListMessage from \"../../components/EmptyListMessage\";\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AnimalDetailScreen = function AnimalDetailScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var animalId = route.params.animalId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    animal = _useState2[0],\n    setAnimal = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    operations = _useState4[0],\n    setOperations = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fabOpen = _useState10[0],\n    setFabOpen = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    confirmDeleteVisible = _useState12[0],\n    setConfirmDeleteVisible = _useState12[1];\n  useEffect(function () {\n    var loadAnimalData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          setLoading(true);\n          setError(null);\n          var animalData = yield getAnimalById(animalId);\n          if (!animalData) {\n            throw new Error('Животное не найдено');\n          }\n          setAnimal(animalData);\n          var operationsData = yield getOperationsByAnimalId(animalId);\n          setOperations(operationsData);\n        } catch (err) {\n          setError('Не удалось загрузить данные животного');\n          console.error(err);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function loadAnimalData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadAnimalData();\n  }, [animalId]);\n  var handleEdit = function handleEdit() {\n    navigation.navigate('AnimalForm', {\n      animalId: animalId\n    });\n  };\n  var handleDelete = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield deleteAnimal(animalId);\n        navigation.goBack();\n      } catch (error) {\n        Alert.alert('Ошибка', 'Не удалось удалить животное');\n      }\n    });\n    return function handleDelete() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleAddOperation = function handleAddOperation() {\n    setFabOpen(false);\n    navigation.navigate('OperationForm', {\n      animalId: animalId\n    });\n  };\n  var renderOperationItem = function renderOperationItem(operation) {\n    var date = operation.date ? format(parseISO(operation.date), 'dd MMMM yyyy', {\n      locale: ru\n    }) : 'Дата не указана';\n    var getIconName = function getIconName() {\n      switch (operation.type) {\n        case 'Лечение':\n          return 'medical-services';\n        case 'Осеменение':\n          return 'water-drop';\n        case 'Вакцинация':\n          return 'vaccines';\n        case 'Осмотр':\n          return 'search';\n        case 'Проверка стельности':\n          return 'monitor-heart';\n        case 'Отёл':\n          return 'child-care';\n        case 'Хирургическая операция':\n          return 'biotech';\n        default:\n          return 'event-note';\n      }\n    };\n    return _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('OperationDetail', {\n          operationId: operation.id\n        });\n      },\n      children: [_jsx(List.Item, {\n        title: operation.type,\n        description: date,\n        left: function left() {\n          return _jsx(List.Icon, {\n            icon: function icon() {\n              return _jsx(MaterialIcons, {\n                name: getIconName(),\n                size: 24,\n                color: \"#616161\"\n              });\n            }\n          });\n        },\n        right: function right() {\n          return _jsx(MaterialIcons, {\n            name: \"chevron-right\",\n            size: 24,\n            color: \"#BDBDBD\"\n          });\n        }\n      }), _jsx(Divider, {})]\n    }, operation.id);\n  };\n  if (loading) {\n    return _jsx(LoadingScreen, {\n      message: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0433\\u043E...\"\n    });\n  }\n  if (error || !animal) {\n    return _jsx(ErrorScreen, {\n      message: error || 'Животное не найдено',\n      onRetry: function onRetry() {\n        return navigation.goBack();\n      }\n    });\n  }\n  var formatDate = function formatDate(dateString) {\n    if (!dateString) return 'Не указано';\n    return format(parseISO(dateString), 'dd.MM.yyyy', {\n      locale: ru\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      children: [_jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsxs(View, {\n            style: styles.header,\n            children: [_jsxs(View, {\n              style: styles.headerTextContainer,\n              children: [_jsx(Text, {\n                style: styles.animalNumber,\n                children: animal.number\n              }), _jsx(Chip, {\n                mode: \"outlined\",\n                style: styles.typeChip,\n                children: animal.type\n              })]\n            }), _jsx(TouchableOpacity, {\n              onPress: handleEdit,\n              children: _jsx(MaterialIcons, {\n                name: \"edit\",\n                size: 24,\n                color: \"#2196F3\"\n              })\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.infoSection,\n            children: [_jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: \"\\u0420\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u0440:\"\n              }), _jsx(Text, {\n                style: styles.infoValue,\n                children: animal.responder || 'Не указан'\n              })]\n            }), _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430:\"\n              }), _jsx(Text, {\n                style: styles.infoValue,\n                children: animal.group || 'Не указана'\n              })]\n            }), _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: \"\\u041F\\u043E\\u043B:\"\n              }), _jsx(Text, {\n                style: styles.infoValue,\n                children: animal.gender === 'male' ? 'Мужской' : 'Женский'\n              })]\n            }), animal.birthDate && _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F:\"\n              }), _jsx(Text, {\n                style: styles.infoValue,\n                children: formatDate(animal.birthDate)\n              })]\n            })]\n          }), animal.gender === 'female' && animal.lastDeliveryDate && _jsxs(_Fragment, {\n            children: [_jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoSection,\n              children: [_jsx(Text, {\n                style: styles.sectionTitle,\n                children: \"\\u0420\\u0435\\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n              }), _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0439 \\u043E\\u0442\\u0451\\u043B:\"\n                }), _jsx(Text, {\n                  style: styles.infoValue,\n                  children: formatDate(animal.lastDeliveryDate)\n                })]\n              }), animal.nextDeliveryDate && _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u041E\\u0436\\u0438\\u0434\\u0430\\u0435\\u043C\\u044B\\u0439 \\u043E\\u0442\\u0451\\u043B:\"\n                }), _jsx(Text, {\n                  style: styles.infoValue,\n                  children: formatDate(animal.nextDeliveryDate)\n                })]\n              }), animal.lastInseminationDate && _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0435 \\u043E\\u0441\\u0435\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435:\"\n                }), _jsx(Text, {\n                  style: styles.infoValue,\n                  children: formatDate(animal.lastInseminationDate)\n                })]\n              }), animal.inseminationCount !== undefined && animal.inseminationCount > 0 && _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u043E\\u0441\\u0435\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439:\"\n                }), _jsx(Text, {\n                  style: styles.infoValue,\n                  children: animal.inseminationCount\n                })]\n              })]\n            })]\n          }), (animal.lactationNumber !== undefined || animal.averageMilk !== undefined) && _jsxs(_Fragment, {\n            children: [_jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoSection,\n              children: [_jsx(Text, {\n                style: styles.sectionTitle,\n                children: \"\\u041B\\u0430\\u043A\\u0442\\u0430\\u0446\\u0438\\u044F\"\n              }), animal.lactationNumber !== undefined && _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043B\\u0430\\u043A\\u0442\\u0430\\u0446\\u0438\\u0438:\"\n                }), _jsx(Text, {\n                  style: styles.infoValue,\n                  children: animal.lactationNumber\n                })]\n              }), animal.averageMilk !== undefined && _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0443\\u0434\\u043E\\u0439:\"\n                }), _jsxs(Text, {\n                  style: styles.infoValue,\n                  children: [animal.averageMilk, \" \\u043A\\u0433\"]\n                })]\n              }), animal.milkByLactation !== undefined && _jsxs(View, {\n                style: styles.infoRow,\n                children: [_jsx(Text, {\n                  style: styles.infoLabel,\n                  children: \"\\u041F\\u043E \\u043B\\u0430\\u043A\\u0442\\u0430\\u0446\\u0438\\u0438:\"\n                }), _jsxs(Text, {\n                  style: styles.infoValue,\n                  children: [animal.milkByLactation, \" \\u043A\\u0433\"]\n                })]\n              })]\n            })]\n          }), animal.notes && _jsxs(_Fragment, {\n            children: [_jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoSection,\n              children: [_jsx(Text, {\n                style: styles.sectionTitle,\n                children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n              }), _jsx(Text, {\n                style: styles.notes,\n                children: animal.notes\n              })]\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsx(Button, {\n            mode: \"contained\",\n            buttonColor: \"#D32F2F\",\n            style: styles.deleteButton,\n            onPress: function onPress() {\n              return setConfirmDeleteVisible(true);\n            },\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435\"\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsxs(View, {\n            style: styles.operationsHeader,\n            children: [_jsx(Text, {\n              style: styles.operationsTitle,\n              children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439\"\n            }), _jsx(TouchableOpacity, {\n              onPress: handleAddOperation,\n              children: _jsx(Text, {\n                style: styles.addOperationText,\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n              })\n            })]\n          }), operations.length === 0 ? _jsx(EmptyListMessage, {\n            message: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439 \\u043E\\u0431 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F\\u0445\",\n            icon: \"healing\"\n          }) : _jsx(View, {\n            style: styles.operationsList,\n            children: operations.map(renderOperationItem)\n          })]\n        })\n      })]\n    }), _jsx(Portal, {\n      children: _jsx(FAB.Group, {\n        open: fabOpen,\n        icon: fabOpen ? 'close' : 'plus',\n        actions: [{\n          icon: 'medical-services',\n          label: 'Добавить операцию',\n          onPress: handleAddOperation\n        }, {\n          icon: 'edit',\n          label: 'Редактировать животное',\n          onPress: handleEdit\n        }],\n        onStateChange: function onStateChange(_ref3) {\n          var open = _ref3.open;\n          return setFabOpen(open);\n        }\n      })\n    }), _jsx(ConfirmationDialog, {\n      visible: confirmDeleteVisible,\n      title: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0433\\u043E\",\n      message: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435 \\u2116\" + animal.number + \"? \\u042D\\u0442\\u043E \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C.\",\n      confirmText: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n      cancelText: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n      onConfirm: handleDelete,\n      onCancel: function onCancel() {\n        return setConfirmDeleteVisible(false);\n      },\n      destructive: true\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  card: {\n    margin: 16,\n    elevation: 2\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 16\n  },\n  headerTextContainer: {\n    flex: 1\n  },\n  animalNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  typeChip: {\n    alignSelf: 'flex-start'\n  },\n  divider: {\n    marginVertical: 16\n  },\n  infoSection: {\n    marginBottom: 8\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    color: '#424242'\n  },\n  infoRow: {\n    flexDirection: 'row',\n    marginBottom: 8\n  },\n  infoLabel: {\n    width: 150,\n    fontSize: 16,\n    color: '#757575'\n  },\n  infoValue: {\n    flex: 1,\n    fontSize: 16,\n    color: '#212121'\n  },\n  notes: {\n    fontSize: 16,\n    color: '#424242',\n    lineHeight: 22\n  },\n  deleteButton: {\n    marginTop: 8\n  },\n  operationsHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  operationsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#424242'\n  },\n  addOperationText: {\n    color: '#2196F3',\n    fontWeight: '600'\n  },\n  operationsList: {\n    marginTop: 8\n  }\n});\nexport default AnimalDetailScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","StyleSheet","TouchableOpacity","Alert","Text","Card","Divider","Button","FAB","Portal","List","Chip","useNavigation","useRoute","MaterialIcons","format","parseISO","ru","getAnimalById","deleteAnimal","getOperationsByAnimalId","LoadingScreen","ErrorScreen","EmptyListMessage","ConfirmationDialog","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AnimalDetailScreen","navigation","route","animalId","params","_useState","_useState2","_slicedToArray","animal","setAnimal","_useState3","_useState4","operations","setOperations","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useState9","_useState10","fabOpen","setFabOpen","_useState11","_useState12","confirmDeleteVisible","setConfirmDeleteVisible","loadAnimalData","_ref","_asyncToGenerator","animalData","Error","operationsData","err","console","apply","arguments","handleEdit","navigate","handleDelete","_ref2","goBack","alert","handleAddOperation","renderOperationItem","operation","date","locale","getIconName","type","onPress","operationId","id","children","Item","title","description","left","Icon","icon","name","size","color","right","message","onRetry","formatDate","dateString","style","styles","container","card","Content","header","headerTextContainer","animalNumber","number","mode","typeChip","divider","infoSection","infoRow","infoLabel","infoValue","responder","group","gender","birthDate","lastDeliveryDate","sectionTitle","nextDeliveryDate","lastInseminationDate","inseminationCount","undefined","lactationNumber","averageMilk","milkByLactation","notes","buttonColor","deleteButton","operationsHeader","operationsTitle","addOperationText","length","operationsList","map","Group","open","actions","label","onStateChange","_ref3","visible","confirmText","cancelText","onConfirm","onCancel","destructive","create","flex","backgroundColor","margin","elevation","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","alignSelf","marginVertical","width","lineHeight","marginTop"],"sources":["C:/vet-assistant/src/screens/animals/AnimalDetailScreen.tsx"],"sourcesContent":["// src/screens/animals/AnimalDetailScreen.tsx - Экран подробной информации о животном\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Card, Divider, Button, FAB, Portal, List, Chip } from 'react-native-paper';\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport { Animal, Operation } from '../../types';\r\nimport { getAnimalById, deleteAnimal } from '../../database/repositories/AnimalRepository';\r\nimport { getOperationsByAnimalId } from '../../database/repositories/OperationRepository';\r\nimport { AnimalStackParamList } from '../../navigation/MainNavigator';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport ErrorScreen from '../../components/ErrorScreen';\r\nimport EmptyListMessage from '../../components/EmptyListMessage';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\n\r\ntype AnimalDetailScreenRouteProp = RouteProp<AnimalStackParamList, 'AnimalDetail'>;\r\ntype AnimalDetailScreenNavigationProp = NativeStackNavigationProp<AnimalStackParamList, 'AnimalDetail'>;\r\n\r\nconst AnimalDetailScreen: React.FC = () => {\r\n  const navigation = useNavigation<AnimalDetailScreenNavigationProp>();\r\n  const route = useRoute<AnimalDetailScreenRouteProp>();\r\n  const { animalId } = route.params;\r\n  \r\n  const [animal, setAnimal] = useState<Animal | null>(null);\r\n  const [operations, setOperations] = useState<Operation[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [fabOpen, setFabOpen] = useState(false);\r\n  const [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const loadAnimalData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const animalData = await getAnimalById(animalId);\r\n        if (!animalData) {\r\n          throw new Error('Животное не найдено');\r\n        }\r\n        \r\n        setAnimal(animalData);\r\n        \r\n        const operationsData = await getOperationsByAnimalId(animalId);\r\n        setOperations(operationsData);\r\n      } catch (err) {\r\n        setError('Не удалось загрузить данные животного');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadAnimalData();\r\n  }, [animalId]);\r\n  \r\n  const handleEdit = () => {\r\n    navigation.navigate('AnimalForm', { animalId });\r\n  };\r\n  \r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteAnimal(animalId);\r\n      navigation.goBack();\r\n    } catch (error) {\r\n      Alert.alert('Ошибка', 'Не удалось удалить животное');\r\n    }\r\n  };\r\n  \r\n  const handleAddOperation = () => {\r\n    setFabOpen(false);\r\n    navigation.navigate('OperationForm', { animalId });\r\n  };\r\n  \r\n  const renderOperationItem = (operation: Operation) => {\r\n    const date = operation.date \r\n      ? format(parseISO(operation.date), 'dd MMMM yyyy', { locale: ru })\r\n      : 'Дата не указана';\r\n    \r\n    const getIconName = () => {\r\n      switch (operation.type) {\r\n        case 'Лечение': return 'medical-services';\r\n        case 'Осеменение': return 'water-drop';\r\n        case 'Вакцинация': return 'vaccines';\r\n        case 'Осмотр': return 'search';\r\n        case 'Проверка стельности': return 'monitor-heart';\r\n        case 'Отёл': return 'child-care';\r\n        case 'Хирургическая операция': return 'biotech';\r\n        default: return 'event-note';\r\n      }\r\n    };\r\n    \r\n    return (\r\n      <TouchableOpacity\r\n        key={operation.id}\r\n        onPress={() => navigation.navigate('OperationDetail', { operationId: operation.id! })}\r\n      >\r\n        <List.Item\r\n          title={operation.type}\r\n          description={date}\r\n          left={() => <List.Icon icon={() => <MaterialIcons name={getIconName()} size={24} color=\"#616161\" />} />}\r\n          right={() => <MaterialIcons name=\"chevron-right\" size={24} color=\"#BDBDBD\" />}\r\n        />\r\n        <Divider />\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  \r\n  if (loading) {\r\n    return <LoadingScreen message=\"Загрузка данных животного...\" />;\r\n  }\r\n  \r\n  if (error || !animal) {\r\n    return <ErrorScreen message={error || 'Животное не найдено'} onRetry={() => navigation.goBack()} />;\r\n  }\r\n  \r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return 'Не указано';\r\n    return format(parseISO(dateString), 'dd.MM.yyyy', { locale: ru });\r\n  };\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <View style={styles.header}>\r\n              <View style={styles.headerTextContainer}>\r\n                <Text style={styles.animalNumber}>{animal.number}</Text>\r\n                <Chip mode=\"outlined\" style={styles.typeChip}>\r\n                  {animal.type}\r\n                </Chip>\r\n              </View>\r\n              <TouchableOpacity onPress={handleEdit}>\r\n                <MaterialIcons name=\"edit\" size={24} color=\"#2196F3\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n            <Divider style={styles.divider} />\r\n            \r\n            <View style={styles.infoSection}>\r\n              <View style={styles.infoRow}>\r\n                <Text style={styles.infoLabel}>Респондер:</Text>\r\n                <Text style={styles.infoValue}>{animal.responder || 'Не указан'}</Text>\r\n              </View>\r\n              \r\n              <View style={styles.infoRow}>\r\n                <Text style={styles.infoLabel}>Группа:</Text>\r\n                <Text style={styles.infoValue}>{animal.group || 'Не указана'}</Text>\r\n              </View>\r\n              \r\n              <View style={styles.infoRow}>\r\n                <Text style={styles.infoLabel}>Пол:</Text>\r\n                <Text style={styles.infoValue}>{animal.gender === 'male' ? 'Мужской' : 'Женский'}</Text>\r\n              </View>\r\n              \r\n              {animal.birthDate && (\r\n                <View style={styles.infoRow}>\r\n                  <Text style={styles.infoLabel}>Дата рождения:</Text>\r\n                  <Text style={styles.infoValue}>{formatDate(animal.birthDate)}</Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n            \r\n            {(animal.gender === 'female' && animal.lastDeliveryDate) && (\r\n              <>\r\n                <Divider style={styles.divider} />\r\n                <View style={styles.infoSection}>\r\n                  <Text style={styles.sectionTitle}>Репродуктивная информация</Text>\r\n                  \r\n                  <View style={styles.infoRow}>\r\n                    <Text style={styles.infoLabel}>Последний отёл:</Text>\r\n                    <Text style={styles.infoValue}>{formatDate(animal.lastDeliveryDate)}</Text>\r\n                  </View>\r\n                  \r\n                  {animal.nextDeliveryDate && (\r\n                    <View style={styles.infoRow}>\r\n                      <Text style={styles.infoLabel}>Ожидаемый отёл:</Text>\r\n                      <Text style={styles.infoValue}>{formatDate(animal.nextDeliveryDate)}</Text>\r\n                    </View>\r\n                  )}\r\n                  \r\n                  {animal.lastInseminationDate && (\r\n                    <View style={styles.infoRow}>\r\n                      <Text style={styles.infoLabel}>Последнее осеменение:</Text>\r\n                      <Text style={styles.infoValue}>{formatDate(animal.lastInseminationDate)}</Text>\r\n                    </View>\r\n                  )}\r\n                  \r\n                  {animal.inseminationCount !== undefined && animal.inseminationCount > 0 && (\r\n                    <View style={styles.infoRow}>\r\n                      <Text style={styles.infoLabel}>Кол-во осеменений:</Text>\r\n                      <Text style={styles.infoValue}>{animal.inseminationCount}</Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n              </>\r\n            )}\r\n            \r\n            {(animal.lactationNumber !== undefined || animal.averageMilk !== undefined) && (\r\n              <>\r\n                <Divider style={styles.divider} />\r\n                <View style={styles.infoSection}>\r\n                  <Text style={styles.sectionTitle}>Лактация</Text>\r\n                  \r\n                  {animal.lactationNumber !== undefined && (\r\n                    <View style={styles.infoRow}>\r\n                      <Text style={styles.infoLabel}>Номер лактации:</Text>\r\n                      <Text style={styles.infoValue}>{animal.lactationNumber}</Text>\r\n                    </View>\r\n                  )}\r\n                  \r\n                  {animal.averageMilk !== undefined && (\r\n                    <View style={styles.infoRow}>\r\n                      <Text style={styles.infoLabel}>Средний удой:</Text>\r\n                      <Text style={styles.infoValue}>{animal.averageMilk} кг</Text>\r\n                    </View>\r\n                  )}\r\n                  \r\n                  {animal.milkByLactation !== undefined && (\r\n                    <View style={styles.infoRow}>\r\n                      <Text style={styles.infoLabel}>По лактации:</Text>\r\n                      <Text style={styles.infoValue}>{animal.milkByLactation} кг</Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n              </>\r\n            )}\r\n            \r\n            {animal.notes && (\r\n              <>\r\n                <Divider style={styles.divider} />\r\n                <View style={styles.infoSection}>\r\n                  <Text style={styles.sectionTitle}>Примечания</Text>\r\n                  <Text style={styles.notes}>{animal.notes}</Text>\r\n                </View>\r\n              </>\r\n            )}\r\n            \r\n            <Divider style={styles.divider} />\r\n            \r\n            <Button \r\n              mode=\"contained\" \r\n              buttonColor=\"#D32F2F\"\r\n              style={styles.deleteButton}\r\n              onPress={() => setConfirmDeleteVisible(true)}\r\n            >\r\n              Удалить животное\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n        \r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <View style={styles.operationsHeader}>\r\n              <Text style={styles.operationsTitle}>История операций</Text>\r\n              <TouchableOpacity onPress={handleAddOperation}>\r\n                <Text style={styles.addOperationText}>Добавить</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n            {operations.length === 0 ? (\r\n              <EmptyListMessage \r\n                message=\"Нет записей об операциях\" \r\n                icon=\"healing\"\r\n              />\r\n            ) : (\r\n              <View style={styles.operationsList}>\r\n                {operations.map(renderOperationItem)}\r\n              </View>\r\n            )}\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n      \r\n      <Portal>\r\n        <FAB.Group\r\n          open={fabOpen}\r\n          icon={fabOpen ? 'close' : 'plus'}\r\n          actions={[\r\n            {\r\n              icon: 'medical-services',\r\n              label: 'Добавить операцию',\r\n              onPress: handleAddOperation,\r\n            },\r\n            {\r\n              icon: 'edit',\r\n              label: 'Редактировать животное',\r\n              onPress: handleEdit,\r\n            },\r\n          ]}\r\n          onStateChange={({ open }) => setFabOpen(open)}\r\n        />\r\n      </Portal>\r\n      \r\n      <ConfirmationDialog\r\n        visible={confirmDeleteVisible}\r\n        title=\"Удаление животного\"\r\n        message={`Вы уверены, что хотите удалить животное №${animal.number}? Это действие нельзя будет отменить.`}\r\n        confirmText=\"Удалить\"\r\n        cancelText=\"Отмена\"\r\n        onConfirm={handleDelete}\r\n        onCancel={() => setConfirmDeleteVisible(false)}\r\n        destructive\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  card: {\r\n    margin: 16,\r\n    elevation: 2,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    marginBottom: 16,\r\n  },\r\n  headerTextContainer: {\r\n    flex: 1,\r\n  },\r\n  animalNumber: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  typeChip: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  divider: {\r\n    marginVertical: 16,\r\n  },\r\n  infoSection: {\r\n    marginBottom: 8,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 12,\r\n    color: '#424242',\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    marginBottom: 8,\r\n  },\r\n  infoLabel: {\r\n    width: 150,\r\n    fontSize: 16,\r\n    color: '#757575',\r\n  },\r\n  infoValue: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    color: '#212121',\r\n  },\r\n  notes: {\r\n    fontSize: 16,\r\n    color: '#424242',\r\n    lineHeight: 22,\r\n  },\r\n  deleteButton: {\r\n    marginTop: 8,\r\n  },\r\n  operationsHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  operationsTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#424242',\r\n  },\r\n  addOperationText: {\r\n    color: '#2196F3',\r\n    fontWeight: '600',\r\n  },\r\n  operationsList: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nexport default AnimalDetailScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}