{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { Provider as PaperProvider, Button } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { theme } from \"./src/styles/theme\";\nimport { DatabaseProvider, useDatabase } from \"./src/context/DatabaseContext\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar DatabaseStatusIndicator = function DatabaseStatusIndicator() {\n  var _useDatabase = useDatabase(),\n    isDbReady = _useDatabase.isDbReady;\n  return _jsx(View, {\n    style: {\n      padding: 10,\n      backgroundColor: isDbReady ? '#d4edda' : '#f8d7da',\n      borderRadius: 5,\n      marginBottom: 20\n    },\n    children: _jsxs(Text, {\n      children: [\"\\u0411\\u0430\\u0437\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \", isDbReady ? 'Готова' : 'Инициализируется...']\n    })\n  });\n};\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u044B\\u0439 \\u044D\\u043A\\u0440\\u0430\\u043D\"\n    }), _jsx(DatabaseStatusIndicator, {}), _jsx(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return navigation.navigate('Details');\n      },\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0434\\u0435\\u0442\\u0430\\u043B\\u044F\\u043C\"\n    })]\n  });\n};\nvar DetailsScreen = function DetailsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"\\u042D\\u043A\\u0440\\u0430\\u043D \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439\"\n    }), _jsx(DatabaseStatusIndicator, {}), _jsx(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    })]\n  });\n};\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(DatabaseProvider, {\n        children: _jsxs(NavigationContainer, {\n          children: [_jsxs(Stack.Navigator, {\n            children: [_jsx(Stack.Screen, {\n              name: \"Home\",\n              component: HomeScreen,\n              options: {\n                title: 'Главная'\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Details\",\n              component: DetailsScreen,\n              options: {\n                title: 'Детали'\n              }\n            })]\n          }), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","Text","StyleSheet","View","SafeAreaProvider","StatusBar","Provider","PaperProvider","Button","NavigationContainer","createNativeStackNavigator","theme","DatabaseProvider","useDatabase","jsxs","_jsxs","jsx","_jsx","DatabaseStatusIndicator","_useDatabase","isDbReady","style","padding","backgroundColor","borderRadius","marginBottom","children","HomeScreen","_ref","navigation","styles","screen","heading","mode","onPress","navigate","DetailsScreen","_ref2","goBack","Stack","App","Navigator","Screen","name","component","options","title","create","flex","justifyContent","alignItems","fontSize","fontWeight"],"sources":["C:/vet-assistant/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Text, StyleSheet, View } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Provider as PaperProvider, Button } from 'react-native-paper';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { theme } from './src/styles/theme';\r\nimport { DatabaseProvider, useDatabase } from './src/context/DatabaseContext';\r\n\r\n// Компонент для отображения статуса БД\r\nconst DatabaseStatusIndicator = () => {\r\n  const { isDbReady } = useDatabase();\r\n  return (\r\n    <View style={{ \r\n      padding: 10, \r\n      backgroundColor: isDbReady ? '#d4edda' : '#f8d7da',\r\n      borderRadius: 5,\r\n      marginBottom: 20 \r\n    }}>\r\n      <Text>База данных: {isDbReady ? 'Готова' : 'Инициализируется...'}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Простые экраны\r\nconst HomeScreen = ({ navigation }) => (\r\n  <View style={styles.screen}>\r\n    <Text style={styles.heading}>Главный экран</Text>\r\n    <DatabaseStatusIndicator />\r\n    <Button mode=\"contained\" onPress={() => navigation.navigate('Details')}>\r\n      Перейти к деталям\r\n    </Button>\r\n  </View>\r\n);\r\n\r\nconst DetailsScreen = ({ navigation }) => (\r\n  <View style={styles.screen}>\r\n    <Text style={styles.heading}>Экран деталей</Text>\r\n    <DatabaseStatusIndicator />\r\n    <Button mode=\"contained\" onPress={() => navigation.goBack()}>\r\n      Назад\r\n    </Button>\r\n  </View>\r\n);\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaProvider>\r\n      <PaperProvider theme={theme}>\r\n        <DatabaseProvider>\r\n          <NavigationContainer>\r\n            <Stack.Navigator>\r\n              <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Главная' }} />\r\n              <Stack.Screen name=\"Details\" component={DetailsScreen} options={{ title: 'Детали' }} />\r\n            </Stack.Navigator>\r\n            <StatusBar style=\"auto\" />\r\n          </NavigationContainer>\r\n        </DatabaseProvider>\r\n      </PaperProvider>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}