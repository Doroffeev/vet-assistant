{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, Divider, Button, List } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { getOperationById, deleteOperation } from \"../../database/repositories/OperationRepository\";\nimport { getAnimalById } from \"../../database/repositories/AnimalRepository\";\nimport { getExecutorById } from \"../../database/repositories/ExecutorRepository\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport ErrorScreen from \"../../components/ErrorScreen\";\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar OperationDetailScreen = function OperationDetailScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var operationId = route.params.operationId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    operation = _useState2[0],\n    setOperation = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    animal = _useState4[0],\n    setAnimal = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    executorName = _useState6[0],\n    setExecutorName = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    confirmDeleteVisible = _useState12[0],\n    setConfirmDeleteVisible = _useState12[1];\n  useEffect(function () {\n    var loadOperationData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          setLoading(true);\n          setError(null);\n          var operationData = yield getOperationById(operationId);\n          if (!operationData) {\n            throw new Error('Операция не найдена');\n          }\n          setOperation(operationData);\n          var animalData = yield getAnimalById(operationData.animalId);\n          if (animalData) {\n            setAnimal(animalData);\n          }\n          if (operationData.executorId) {\n            var executor = yield getExecutorById(operationData.executorId);\n            if (executor) {\n              setExecutorName(executor.name);\n            }\n          }\n        } catch (err) {\n          setError('Не удалось загрузить данные операции');\n          console.error(err);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function loadOperationData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadOperationData();\n  }, [operationId]);\n  var handleEdit = function handleEdit() {\n    navigation.navigate('OperationForm', {\n      operationId: operationId\n    });\n  };\n  var handleDelete = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield deleteOperation(operationId);\n        navigation.goBack();\n      } catch (error) {\n        Alert.alert('Ошибка', 'Не удалось удалить операцию');\n      }\n    });\n    return function handleDelete() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var navigateToAnimal = function navigateToAnimal() {\n    if (animal && animal.id) {\n      navigation.navigate('AnimalDetail', {\n        animalId: animal.id\n      });\n    }\n  };\n  if (loading) {\n    return _jsx(LoadingScreen, {\n      message: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438...\"\n    });\n  }\n  if (error || !operation) {\n    return _jsx(ErrorScreen, {\n      message: error || 'Операция не найдена',\n      onRetry: function onRetry() {\n        return navigation.goBack();\n      }\n    });\n  }\n  var formatDate = function formatDate(dateString) {\n    return format(parseISO(dateString), 'dd MMMM yyyy', {\n      locale: ru\n    });\n  };\n  var getOperationIcon = function getOperationIcon() {\n    switch (operation.type) {\n      case 'Лечение':\n        return 'medical-services';\n      case 'Осеменение':\n        return 'water-drop';\n      case 'Вакцинация':\n        return 'vaccines';\n      case 'Осмотр':\n        return 'search';\n      case 'Проверка стельности':\n        return 'monitor-heart';\n      case 'Отёл':\n        return 'child-care';\n      case 'Хирургическая операция':\n        return 'biotech';\n      default:\n        return 'event-note';\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      children: _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsxs(View, {\n            style: styles.header,\n            children: [_jsxs(View, {\n              style: styles.headerTextContainer,\n              children: [_jsx(Text, {\n                style: styles.operationType,\n                children: operation.type\n              }), _jsx(Text, {\n                style: styles.operationDate,\n                children: formatDate(operation.date)\n              })]\n            }), _jsx(TouchableOpacity, {\n              onPress: handleEdit,\n              children: _jsx(MaterialIcons, {\n                name: \"edit\",\n                size: 24,\n                color: \"#2196F3\"\n              })\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsx(List.Item, {\n            title: \"\\u0416\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435\",\n            description: animal ? animal.number + \" (\" + animal.type + \")\" : 'Не найдено',\n            left: function left() {\n              return _jsx(List.Icon, {\n                icon: \"pets\"\n              });\n            },\n            right: function right() {\n              return animal && _jsx(MaterialIcons, {\n                name: \"arrow-forward\",\n                size: 24,\n                color: \"#BDBDBD\"\n              });\n            },\n            onPress: animal ? navigateToAnimal : undefined,\n            style: animal ? styles.clickableItem : undefined\n          }), _jsx(Divider, {}), operation.type === 'Лечение' && _jsxs(_Fragment, {\n            children: [operation.diagnosis && _jsxs(_Fragment, {\n              children: [_jsx(List.Item, {\n                title: \"\\u0414\\u0438\\u0430\\u0433\\u043D\\u043E\\u0437\",\n                description: operation.diagnosis,\n                left: function left() {\n                  return _jsx(List.Icon, {\n                    icon: \"stethoscope\"\n                  });\n                }\n              }), _jsx(Divider, {})]\n            }), operation.medicine && _jsxs(_Fragment, {\n              children: [_jsx(List.Item, {\n                title: \"\\u041B\\u0435\\u043A\\u0430\\u0440\\u0441\\u0442\\u0432\\u043E\",\n                description: operation.medicine,\n                left: function left() {\n                  return _jsx(List.Icon, {\n                    icon: \"pill\"\n                  });\n                }\n              }), _jsx(Divider, {})]\n            }), operation.dose && _jsxs(_Fragment, {\n              children: [_jsx(List.Item, {\n                title: \"\\u0414\\u043E\\u0437\\u0430\",\n                description: operation.dose,\n                left: function left() {\n                  return _jsx(List.Icon, {\n                    icon: \"eyedropper\"\n                  });\n                }\n              }), _jsx(Divider, {})]\n            })]\n          }), operation.type === 'Осеменение' && operation.bull && _jsxs(_Fragment, {\n            children: [_jsx(List.Item, {\n              title: \"\\u0411\\u044B\\u043A\",\n              description: operation.bull,\n              left: function left() {\n                return _jsx(List.Icon, {\n                  icon: function icon() {\n                    return _jsx(MaterialIcons, {\n                      name: \"pets\",\n                      size: 24,\n                      color: \"#616161\"\n                    });\n                  }\n                });\n              }\n            }), _jsx(Divider, {})]\n          }), operation.type === 'Вакцинация' && operation.vaccine && _jsxs(_Fragment, {\n            children: [_jsx(List.Item, {\n              title: \"\\u0412\\u0430\\u043A\\u0446\\u0438\\u043D\\u0430\",\n              description: operation.vaccine,\n              left: function left() {\n                return _jsx(List.Icon, {\n                  icon: \"needle\"\n                });\n              }\n            }), _jsx(Divider, {})]\n          }), executorName && _jsxs(_Fragment, {\n            children: [_jsx(List.Item, {\n              title: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\",\n              description: executorName,\n              left: function left() {\n                return _jsx(List.Icon, {\n                  icon: \"account\"\n                });\n              }\n            }), _jsx(Divider, {})]\n          }), operation.result && _jsxs(_Fragment, {\n            children: [_jsx(List.Item, {\n              title: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\",\n              description: operation.result,\n              left: function left() {\n                return _jsx(List.Icon, {\n                  icon: \"check-circle\"\n                });\n              }\n            }), _jsx(Divider, {})]\n          }), operation.notes && _jsxs(_Fragment, {\n            children: [_jsxs(View, {\n              style: styles.notesContainer,\n              children: [_jsx(Text, {\n                style: styles.notesTitle,\n                children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F:\"\n              }), _jsx(Text, {\n                style: styles.notesText,\n                children: operation.notes\n              })]\n            }), _jsx(Divider, {\n              style: styles.divider\n            })]\n          }), _jsx(Button, {\n            mode: \"contained\",\n            buttonColor: \"#D32F2F\",\n            style: styles.deleteButton,\n            onPress: function onPress() {\n              return setConfirmDeleteVisible(true);\n            },\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u044E\"\n          })]\n        })\n      })\n    }), _jsx(ConfirmationDialog, {\n      visible: confirmDeleteVisible,\n      title: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\",\n      message: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u044E \\\"\" + operation.type + \"\\\" \\u043E\\u0442 \" + formatDate(operation.date) + \"? \\u042D\\u0442\\u043E \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C.\",\n      confirmText: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n      cancelText: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n      onConfirm: handleDelete,\n      onCancel: function onCancel() {\n        return setConfirmDeleteVisible(false);\n      },\n      destructive: true\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  card: {\n    margin: 16,\n    elevation: 2\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 16\n  },\n  headerTextContainer: {\n    flex: 1\n  },\n  operationType: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  operationDate: {\n    fontSize: 16,\n    color: '#757575'\n  },\n  divider: {\n    marginVertical: 16\n  },\n  clickableItem: {\n    backgroundColor: '#F5F5F5'\n  },\n  notesContainer: {\n    padding: 16\n  },\n  notesTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#424242'\n  },\n  notesText: {\n    fontSize: 16,\n    color: '#424242',\n    lineHeight: 22\n  },\n  deleteButton: {\n    marginTop: 8\n  }\n});\nexport default OperationDetailScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","StyleSheet","TouchableOpacity","Alert","Text","Card","Divider","Button","List","useNavigation","useRoute","MaterialIcons","format","parseISO","ru","getOperationById","deleteOperation","getAnimalById","getExecutorById","LoadingScreen","ErrorScreen","ConfirmationDialog","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OperationDetailScreen","navigation","route","operationId","params","_useState","_useState2","_slicedToArray","operation","setOperation","_useState3","_useState4","animal","setAnimal","_useState5","_useState6","executorName","setExecutorName","_useState7","_useState8","loading","setLoading","_useState9","_useState10","error","setError","_useState11","_useState12","confirmDeleteVisible","setConfirmDeleteVisible","loadOperationData","_ref","_asyncToGenerator","operationData","Error","animalData","animalId","executorId","executor","name","err","console","apply","arguments","handleEdit","navigate","handleDelete","_ref2","goBack","alert","navigateToAnimal","id","message","onRetry","formatDate","dateString","locale","getOperationIcon","type","style","styles","container","children","card","Content","header","headerTextContainer","operationType","operationDate","date","onPress","size","color","divider","Item","title","description","number","left","Icon","icon","right","undefined","clickableItem","diagnosis","medicine","dose","bull","vaccine","result","notes","notesContainer","notesTitle","notesText","mode","buttonColor","deleteButton","visible","confirmText","cancelText","onConfirm","onCancel","destructive","create","flex","backgroundColor","margin","elevation","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","marginVertical","padding","lineHeight","marginTop"],"sources":["C:/vet-assistant/src/screens/operations/OperationDetailScreen.tsx"],"sourcesContent":["// src/screens/operations/OperationDetailScreen.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Card, Divider, Button, List, Chip } from 'react-native-paper';\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport { Operation, Animal } from '../../types';\r\nimport { getOperationById, deleteOperation } from '../../database/repositories/OperationRepository';\r\nimport { getAnimalById } from '../../database/repositories/AnimalRepository';\r\nimport { getExecutorById } from '../../database/repositories/ExecutorRepository';\r\nimport { AnimalStackParamList, CalendarStackParamList } from '../../navigation/MainNavigator';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport ErrorScreen from '../../components/ErrorScreen';\r\nimport ConfirmationDialog from '../../components/ConfirmationDialog';\r\n\r\ntype AnimalDetailScreenRouteProp = RouteProp<AnimalStackParamList | CalendarStackParamList, 'OperationDetail'>;\r\ntype OperationDetailScreenNavigationProp = NativeStackNavigationProp<AnimalStackParamList | CalendarStackParamList, 'OperationDetail'>;\r\n\r\nconst OperationDetailScreen: React.FC = () => {\r\n  const navigation = useNavigation<OperationDetailScreenNavigationProp>();\r\n  const route = useRoute<AnimalDetailScreenRouteProp>();\r\n  const { operationId } = route.params;\r\n  \r\n  const [operation, setOperation] = useState<Operation | null>(null);\r\n  const [animal, setAnimal] = useState<Animal | null>(null);\r\n  const [executorName, setExecutorName] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const loadOperationData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Загружаем данные операции\r\n        const operationData = await getOperationById(operationId);\r\n        if (!operationData) {\r\n          throw new Error('Операция не найдена');\r\n        }\r\n        \r\n        setOperation(operationData);\r\n        \r\n        // Загружаем данные животного\r\n        const animalData = await getAnimalById(operationData.animalId);\r\n        if (animalData) {\r\n          setAnimal(animalData);\r\n        }\r\n        \r\n        // Загружаем данные исполнителя, если есть\r\n        if (operationData.executorId) {\r\n          const executor = await getExecutorById(operationData.executorId);\r\n          if (executor) {\r\n            setExecutorName(executor.name);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        setError('Не удалось загрузить данные операции');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadOperationData();\r\n  }, [operationId]);\r\n  \r\n  const handleEdit = () => {\r\n    navigation.navigate('OperationForm', { operationId });\r\n  };\r\n  \r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteOperation(operationId);\r\n      navigation.goBack();\r\n    } catch (error) {\r\n      Alert.alert('Ошибка', 'Не удалось удалить операцию');\r\n    }\r\n  };\r\n  \r\n  const navigateToAnimal = () => {\r\n    if (animal && animal.id) {\r\n      navigation.navigate('AnimalDetail', { animalId: animal.id });\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <LoadingScreen message=\"Загрузка данных операции...\" />;\r\n  }\r\n  \r\n  if (error || !operation) {\r\n    return <ErrorScreen message={error || 'Операция не найдена'} onRetry={() => navigation.goBack()} />;\r\n  }\r\n  \r\n  const formatDate = (dateString: string) => {\r\n    return format(parseISO(dateString), 'dd MMMM yyyy', { locale: ru });\r\n  };\r\n  \r\n  // Иконка для типа операции\r\n  const getOperationIcon = () => {\r\n    switch (operation.type) {\r\n      case 'Лечение': return 'medical-services';\r\n      case 'Осеменение': return 'water-drop';\r\n      case 'Вакцинация': return 'vaccines';\r\n      case 'Осмотр': return 'search';\r\n      case 'Проверка стельности': return 'monitor-heart';\r\n      case 'Отёл': return 'child-care';\r\n      case 'Хирургическая операция': return 'biotech';\r\n      default: return 'event-note';\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <View style={styles.header}>\r\n              <View style={styles.headerTextContainer}>\r\n                <Text style={styles.operationType}>{operation.type}</Text>\r\n                <Text style={styles.operationDate}>{formatDate(operation.date)}</Text>\r\n              </View>\r\n              <TouchableOpacity onPress={handleEdit}>\r\n                <MaterialIcons name=\"edit\" size={24} color=\"#2196F3\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n            <Divider style={styles.divider} />\r\n            \r\n            <List.Item\r\n              title=\"Животное\"\r\n              description={animal ? `${animal.number} (${animal.type})` : 'Не найдено'}\r\n              left={() => <List.Icon icon=\"pets\" />}\r\n              right={() => animal && <MaterialIcons name=\"arrow-forward\" size={24} color=\"#BDBDBD\" />}\r\n              onPress={animal ? navigateToAnimal : undefined}\r\n              style={animal ? styles.clickableItem : undefined}\r\n            />\r\n            \r\n            <Divider />\r\n            \r\n            {operation.type === 'Лечение' && (\r\n              <>\r\n                {operation.diagnosis && (\r\n                  <>\r\n                    <List.Item\r\n                      title=\"Диагноз\"\r\n                      description={operation.diagnosis}\r\n                      left={() => <List.Icon icon=\"stethoscope\" />}\r\n                    />\r\n                    <Divider />\r\n                  </>\r\n                )}\r\n                \r\n                {operation.medicine && (\r\n                  <>\r\n                    <List.Item\r\n                      title=\"Лекарство\"\r\n                      description={operation.medicine}\r\n                      left={() => <List.Icon icon=\"pill\" />}\r\n                    />\r\n                    <Divider />\r\n                  </>\r\n                )}\r\n                \r\n                {operation.dose && (\r\n                  <>\r\n                    <List.Item\r\n                      title=\"Доза\"\r\n                      description={operation.dose}\r\n                      left={() => <List.Icon icon=\"eyedropper\" />}\r\n                    />\r\n                    <Divider />\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            \r\n            {operation.type === 'Осеменение' && operation.bull && (\r\n              <>\r\n                <List.Item\r\n                  title=\"Бык\"\r\n                  description={operation.bull}\r\n                  left={() => <List.Icon icon={() => <MaterialIcons name=\"pets\" size={24} color=\"#616161\" />} />}\r\n                />\r\n                <Divider />\r\n              </>\r\n            )}\r\n            \r\n            {operation.type === 'Вакцинация' && operation.vaccine && (\r\n              <>\r\n                <List.Item\r\n                  title=\"Вакцина\"\r\n                  description={operation.vaccine}\r\n                  left={() => <List.Icon icon=\"needle\" />}\r\n                />\r\n                <Divider />\r\n              </>\r\n            )}\r\n            \r\n            {executorName && (\r\n              <>\r\n                <List.Item\r\n                  title=\"Исполнитель\"\r\n                  description={executorName}\r\n                  left={() => <List.Icon icon=\"account\" />}\r\n                />\r\n                <Divider />\r\n              </>\r\n            )}\r\n            \r\n            {operation.result && (\r\n              <>\r\n                <List.Item\r\n                  title=\"Результат\"\r\n                  description={operation.result}\r\n                  left={() => <List.Icon icon=\"check-circle\" />}\r\n                />\r\n                <Divider />\r\n              </>\r\n            )}\r\n            \r\n            {operation.notes && (\r\n              <>\r\n                <View style={styles.notesContainer}>\r\n                  <Text style={styles.notesTitle}>Примечания:</Text>\r\n                  <Text style={styles.notesText}>{operation.notes}</Text>\r\n                </View>\r\n                <Divider style={styles.divider} />\r\n              </>\r\n            )}\r\n            \r\n            <Button \r\n              mode=\"contained\" \r\n              buttonColor=\"#D32F2F\"\r\n              style={styles.deleteButton}\r\n              onPress={() => setConfirmDeleteVisible(true)}\r\n            >\r\n              Удалить операцию\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n      \r\n      <ConfirmationDialog\r\n        visible={confirmDeleteVisible}\r\n        title=\"Удаление операции\"\r\n        message={`Вы уверены, что хотите удалить операцию \"${operation.type}\" от ${formatDate(operation.date)}? Это действие нельзя будет отменить.`}\r\n        confirmText=\"Удалить\"\r\n        cancelText=\"Отмена\"\r\n        onConfirm={handleDelete}\r\n        onCancel={() => setConfirmDeleteVisible(false)}\r\n        destructive\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  card: {\r\n    margin: 16,\r\n    elevation: 2,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    marginBottom: 16,\r\n  },\r\n  headerTextContainer: {\r\n    flex: 1,\r\n  },\r\n  operationType: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  operationDate: {\r\n    fontSize: 16,\r\n    color: '#757575',\r\n  },\r\n  divider: {\r\n    marginVertical: 16,\r\n  },\r\n  clickableItem: {\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  notesContainer: {\r\n    padding: 16,\r\n  },\r\n  notesTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n    color: '#424242',\r\n  },\r\n  notesText: {\r\n    fontSize: 16,\r\n    color: '#424242',\r\n    lineHeight: 22,\r\n  },\r\n  deleteButton: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nexport default OperationDetailScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}