{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ErrorScreen = function ErrorScreen(_ref) {\n  var _ref$message = _ref.message,\n    message = _ref$message === void 0 ? 'Что-то пошло не так...' : _ref$message,\n    onRetry = _ref.onRetry;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MaterialIcons, {\n      name: \"error-outline\",\n      size: 64,\n      color: \"#D32F2F\"\n    }), _jsx(Text, {\n      style: styles.message,\n      children: message\n    }), onRetry && _jsx(Button, {\n      title: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\",\n      onPress: onRetry,\n      color: \"#2196F3\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5F5F5',\n    padding: 16\n  },\n  message: {\n    marginTop: 16,\n    marginBottom: 24,\n    fontSize: 16,\n    color: '#424242',\n    textAlign: 'center'\n  }\n});\nexport default ErrorScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","Button","MaterialIcons","jsx","_jsx","jsxs","_jsxs","ErrorScreen","_ref","_ref$message","message","onRetry","style","styles","container","children","name","size","color","title","onPress","create","flex","justifyContent","alignItems","backgroundColor","padding","marginTop","marginBottom","fontSize","textAlign"],"sources":["C:/vet-assistant/src/components/ErrorScreen.tsx"],"sourcesContent":["// src/components/ErrorScreen.tsx - Компонент ошибки\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, Button } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\ninterface ErrorScreenProps {\r\n  message?: string;\r\n  onRetry?: () => void;\r\n}\r\n\r\nconst ErrorScreen: React.FC<ErrorScreenProps> = ({ \r\n  message = 'Что-то пошло не так...', \r\n  onRetry \r\n}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <MaterialIcons name=\"error-outline\" size={64} color=\"#D32F2F\" />\r\n      <Text style={styles.message}>{message}</Text>\r\n      {onRetry && (\r\n        <Button\r\n          title=\"Повторить\"\r\n          onPress={onRetry}\r\n          color=\"#2196F3\"\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#F5F5F5',\r\n    padding: 16,\r\n  },\r\n  message: {\r\n    marginTop: 16,\r\n    marginBottom: 24,\r\n    fontSize: 16,\r\n    color: '#424242',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default ErrorScreen;"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAE1B,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAOnD,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAGvC;EAAA,IAAAC,YAAA,GAAAD,IAAA,CAFJE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,wBAAwB,GAAAA,YAAA;IAClCE,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAEP,OACEL,KAAA,CAACR,IAAI;IAACc,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BX,IAAA,CAACF,aAAa;MAACc,IAAI,EAAC,eAAe;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC,EAChEd,IAAA,CAACL,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACH,OAAQ;MAAAK,QAAA,EAAEL;IAAO,CAAO,CAAC,EAC5CC,OAAO,IACNP,IAAA,CAACH,MAAM;MACLkB,KAAK,EAAC,wDAAW;MACjBC,OAAO,EAAET,OAAQ;MACjBO,KAAK,EAAC;IAAS,CAChB,CACF;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAML,MAAM,GAAGb,UAAU,CAACqB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE;EACX,CAAC;EACDhB,OAAO,EAAE;IACPiB,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZX,KAAK,EAAE,SAAS;IAChBY,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAevB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}