{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, Button, Card, HelperText } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { getAnimalById, addAnimal, updateAnimal } from \"../../database/repositories/AnimalRepository\";\nimport { ANIMAL_TYPES } from \"../../constants/appConstants\";\nimport DatePickerField from \"../../components/DatePickerField\";\nimport SelectField from \"../../components/SelectField\";\nimport NumericInput from \"../../components/NumericInput\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport ErrorScreen from \"../../components/ErrorScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AnimalFormScreen = function AnimalFormScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var _ref = route.params || {},\n    animalId = _ref.animalId;\n  var isEditMode = !!animalId;\n  var _useState = useState(isEditMode),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    formSubmitting = _useState6[0],\n    setFormSubmitting = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    number = _useState8[0],\n    setNumber = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    responder = _useState10[0],\n    setResponder = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    group = _useState12[0],\n    setGroup = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    type = _useState14[0],\n    setType = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    gender = _useState16[0],\n    setGender = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    birthDate = _useState18[0],\n    setBirthDate = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    lastDeliveryDate = _useState20[0],\n    setLastDeliveryDate = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    nextDeliveryDate = _useState22[0],\n    setNextDeliveryDate = _useState22[1];\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    lastInseminationDate = _useState24[0],\n    setLastInseminationDate = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    lactationNumber = _useState26[0],\n    setLactationNumber = _useState26[1];\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    inseminationCount = _useState28[0],\n    setInseminationCount = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    averageMilk = _useState30[0],\n    setAverageMilk = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    milkByLactation = _useState32[0],\n    setMilkByLactation = _useState32[1];\n  var _useState33 = useState(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    notes = _useState34[0],\n    setNotes = _useState34[1];\n  var _useState35 = useState({}),\n    _useState36 = _slicedToArray(_useState35, 2),\n    errors = _useState36[0],\n    setErrors = _useState36[1];\n  useEffect(function () {\n    var loadAnimal = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (!isEditMode) return;\n        try {\n          var _animal$lactationNumb, _animal$inseminationC, _animal$averageMilk, _animal$milkByLactati;\n          setLoading(true);\n          var animal = yield getAnimalById(animalId);\n          if (!animal) {\n            throw new Error('Животное не найдено');\n          }\n          setNumber(animal.number);\n          setResponder(animal.responder || '');\n          setGroup(animal.group || '');\n          setType(animal.type);\n          setGender(animal.gender);\n          setBirthDate(animal.birthDate || null);\n          setLastDeliveryDate(animal.lastDeliveryDate || null);\n          setNextDeliveryDate(animal.nextDeliveryDate || null);\n          setLastInseminationDate(animal.lastInseminationDate || null);\n          setLactationNumber(((_animal$lactationNumb = animal.lactationNumber) == null ? void 0 : _animal$lactationNumb.toString()) || '');\n          setInseminationCount(((_animal$inseminationC = animal.inseminationCount) == null ? void 0 : _animal$inseminationC.toString()) || '');\n          setAverageMilk(((_animal$averageMilk = animal.averageMilk) == null ? void 0 : _animal$averageMilk.toString()) || '');\n          setMilkByLactation(((_animal$milkByLactati = animal.milkByLactation) == null ? void 0 : _animal$milkByLactati.toString()) || '');\n          setNotes(animal.notes || '');\n        } catch (err) {\n          setError('Не удалось загрузить данные животного');\n          console.error(err);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function loadAnimal() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadAnimal();\n  }, [isEditMode, animalId]);\n  var validateForm = function validateForm() {\n    var newErrors = {};\n    if (!number.trim()) {\n      newErrors.number = 'Номер животного обязателен';\n    }\n    if (!type) {\n      newErrors.type = 'Тип животного обязателен';\n    }\n    if (!gender) {\n      newErrors.gender = 'Пол животного обязателен';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      Keyboard.dismiss();\n      if (!validateForm()) {\n        return;\n      }\n      try {\n        setFormSubmitting(true);\n        var animalData = {\n          number: number,\n          responder: responder || undefined,\n          group: group || undefined,\n          type: type,\n          gender: gender,\n          birthDate: birthDate || undefined,\n          lastDeliveryDate: lastDeliveryDate || undefined,\n          nextDeliveryDate: nextDeliveryDate || undefined,\n          lastInseminationDate: lastInseminationDate || undefined,\n          lactationNumber: lactationNumber ? parseInt(lactationNumber, 10) : undefined,\n          inseminationCount: inseminationCount ? parseInt(inseminationCount, 10) : undefined,\n          averageMilk: averageMilk ? parseFloat(averageMilk) : undefined,\n          milkByLactation: milkByLactation ? parseFloat(milkByLactation) : undefined,\n          notes: notes || undefined,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        if (isEditMode) {\n          yield updateAnimal(_objectSpread(_objectSpread({}, animalData), {}, {\n            id: animalId\n          }));\n          navigation.goBack();\n        } else {\n          var newAnimalId = yield addAnimal(animalData);\n          navigation.replace('AnimalDetail', {\n            animalId: newAnimalId\n          });\n        }\n      } catch (err) {\n        Alert.alert('Ошибка', isEditMode ? 'Не удалось обновить данные животного' : 'Не удалось добавить новое животное');\n        console.error(err);\n      } finally {\n        setFormSubmitting(false);\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsx(LoadingScreen, {\n      message: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    });\n  }\n  if (error) {\n    return _jsx(ErrorScreen, {\n      message: error,\n      onRetry: function onRetry() {\n        return navigation.goBack();\n      }\n    });\n  }\n  var animalTypeOptions = Object.entries(ANIMAL_TYPES).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n      _ = _ref5[0],\n      label = _ref5[1];\n    return {\n      label: label,\n      value: label\n    };\n  });\n  var genderOptions = [{\n    label: 'Женский',\n    value: 'female'\n  }, {\n    label: 'Мужской',\n    value: 'male'\n  }];\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsxs(Text, {\n            style: styles.label,\n            children: [\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0433\\u043E \", _jsx(Text, {\n              style: styles.required,\n              children: \"*\"\n            })]\n          }), _jsx(TextInput, {\n            style: [styles.textInput, errors.number && styles.inputError],\n            value: number,\n            onChangeText: setNumber,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0433\\u043E\",\n            maxLength: 20\n          }), errors.number && _jsx(HelperText, {\n            type: \"error\",\n            visible: !!errors.number,\n            children: errors.number\n          })]\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u0420\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u0440\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            value: responder,\n            onChangeText: setResponder,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0440\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u0440\\u0430\",\n            maxLength: 20,\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            value: group,\n            onChangeText: setGroup,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0443\",\n            maxLength: 20\n          })]\n        }), _jsx(SelectField, {\n          label: \"\\u0422\\u0438\\u043F \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0433\\u043E\",\n          value: type,\n          onChange: function onChange(value) {\n            return setType(value);\n          },\n          options: animalTypeOptions,\n          error: errors.type,\n          required: true,\n          zIndex: 3000\n        }), _jsx(SelectField, {\n          label: \"\\u041F\\u043E\\u043B\",\n          value: gender,\n          onChange: function onChange(value) {\n            return setGender(value);\n          },\n          options: genderOptions,\n          error: errors.gender,\n          required: true,\n          zIndex: 2900\n        }), _jsx(DatePickerField, {\n          label: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\",\n          value: birthDate,\n          onChange: setBirthDate\n        })]\n      })\n    }), gender === 'female' && _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0420\\u0435\\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }), _jsx(DatePickerField, {\n          label: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0442\\u0451\\u043B\\u0430\",\n          value: lastDeliveryDate,\n          onChange: setLastDeliveryDate\n        }), _jsx(DatePickerField, {\n          label: \"\\u041E\\u0436\\u0438\\u0434\\u0430\\u0435\\u043C\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0435\\u0433\\u043E \\u043E\\u0442\\u0451\\u043B\\u0430\",\n          value: nextDeliveryDate,\n          onChange: setNextDeliveryDate\n        }), _jsx(DatePickerField, {\n          label: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0441\\u0435\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\",\n          value: lastInseminationDate,\n          onChange: setLastInseminationDate\n        }), _jsx(NumericInput, {\n          label: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0441\\u0435\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\",\n          value: inseminationCount,\n          onChange: setInseminationCount,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n          decimal: false,\n          min: 0\n        })]\n      })\n    }), gender === 'female' && _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u041B\\u0430\\u043A\\u0442\\u0430\\u0446\\u0438\\u044F\"\n        }), _jsx(NumericInput, {\n          label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043B\\u0430\\u043A\\u0442\\u0430\\u0446\\u0438\\u0438\",\n          value: lactationNumber,\n          onChange: setLactationNumber,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440\",\n          decimal: false,\n          min: 1\n        }), _jsx(NumericInput, {\n          label: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0443\\u0434\\u043E\\u0439\",\n          value: averageMilk,\n          onChange: setAverageMilk,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\",\n          decimal: true,\n          min: 0,\n          suffix: \"\\u043A\\u0433\"\n        }), _jsx(NumericInput, {\n          label: \"\\u041C\\u043E\\u043B\\u043E\\u043A\\u043E \\u043F\\u043E \\u043B\\u0430\\u043A\\u0442\\u0430\\u0446\\u0438\\u0438\",\n          value: milkByLactation,\n          onChange: setMilkByLactation,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\",\n          decimal: true,\n          min: 0,\n          suffix: \"\\u043A\\u0433\"\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n          }), _jsx(TextInput, {\n            style: [styles.textInput, styles.textArea],\n            value: notes,\n            onChangeText: setNotes,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\",\n            multiline: true,\n            numberOfLines: 4\n          })]\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        mode: \"contained\",\n        onPress: handleSave,\n        loading: formSubmitting,\n        disabled: formSubmitting,\n        style: styles.saveButton,\n        children: isEditMode ? 'Сохранить изменения' : 'Добавить животное'\n      }), _jsx(Button, {\n        mode: \"outlined\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        style: styles.cancelButton,\n        disabled: formSubmitting,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  card: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#424242'\n  },\n  formGroup: {\n    marginBottom: 16\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    color: '#424242'\n  },\n  required: {\n    color: '#D32F2F'\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#BDBDBD',\n    borderRadius: 4,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: '#FFFFFF'\n  },\n  inputError: {\n    borderColor: '#D32F2F'\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top'\n  },\n  buttonsContainer: {\n    padding: 16,\n    marginBottom: 24\n  },\n  saveButton: {\n    marginBottom: 8\n  },\n  cancelButton: {\n    borderColor: '#BDBDBD'\n  }\n});\nexport default AnimalFormScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","StyleSheet","Alert","Keyboard","TextInput","Text","Button","Card","HelperText","useNavigation","useRoute","getAnimalById","addAnimal","updateAnimal","ANIMAL_TYPES","DatePickerField","SelectField","NumericInput","LoadingScreen","ErrorScreen","jsx","_jsx","jsxs","_jsxs","AnimalFormScreen","navigation","route","_ref","params","animalId","isEditMode","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","formSubmitting","setFormSubmitting","_useState7","_useState8","number","setNumber","_useState9","_useState10","responder","setResponder","_useState11","_useState12","group","setGroup","_useState13","_useState14","type","setType","_useState15","_useState16","gender","setGender","_useState17","_useState18","birthDate","setBirthDate","_useState19","_useState20","lastDeliveryDate","setLastDeliveryDate","_useState21","_useState22","nextDeliveryDate","setNextDeliveryDate","_useState23","_useState24","lastInseminationDate","setLastInseminationDate","_useState25","_useState26","lactationNumber","setLactationNumber","_useState27","_useState28","inseminationCount","setInseminationCount","_useState29","_useState30","averageMilk","setAverageMilk","_useState31","_useState32","milkByLactation","setMilkByLactation","_useState33","_useState34","notes","setNotes","_useState35","_useState36","errors","setErrors","loadAnimal","_ref2","_asyncToGenerator","_animal$lactationNumb","_animal$inseminationC","_animal$averageMilk","_animal$milkByLactati","animal","Error","toString","err","console","apply","arguments","validateForm","newErrors","trim","Object","keys","length","handleSave","_ref3","dismiss","animalData","undefined","parseInt","parseFloat","createdAt","Date","toISOString","updatedAt","_objectSpread","id","goBack","newAnimalId","replace","alert","message","onRetry","animalTypeOptions","entries","map","_ref4","_ref5","_","label","value","genderOptions","style","styles","container","children","card","Content","sectionTitle","formGroup","required","textInput","inputError","onChangeText","placeholder","maxLength","visible","keyboardType","onChange","options","zIndex","decimal","min","suffix","textArea","multiline","numberOfLines","buttonsContainer","mode","onPress","disabled","saveButton","cancelButton","create","flex","backgroundColor","margin","marginBottom","elevation","fontSize","fontWeight","color","borderWidth","borderColor","borderRadius","padding","height","textAlignVertical"],"sources":["C:/vet-assistant/src/screens/animals/AnimalFormScreen.tsx"],"sourcesContent":["// src/screens/animals/AnimalFormScreen.tsx - Экран формы животного\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, Alert, Keyboard, TextInput } from 'react-native';\r\nimport { Text, Button, Card, HelperText } from 'react-native-paper';\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { Animal } from '../../types';\r\nimport { getAnimalById, addAnimal, updateAnimal } from '../../database/repositories/AnimalRepository';\r\nimport { AnimalStackParamList } from '../../navigation/MainNavigator';\r\nimport { ANIMAL_TYPES } from '../../constants/appConstants';\r\nimport DatePickerField from '../../components/DatePickerField';\r\nimport SelectField from '../../components/SelectField';\r\nimport NumericInput from '../../components/NumericInput';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport ErrorScreen from '../../components/ErrorScreen';\r\n\r\ntype AnimalFormScreenRouteProp = RouteProp<AnimalStackParamList, 'AnimalForm'>;\r\ntype AnimalFormScreenNavigationProp = NativeStackNavigationProp<AnimalStackParamList, 'AnimalForm'>;\r\n\r\nconst AnimalFormScreen: React.FC = () => {\r\n  const navigation = useNavigation<AnimalFormScreenNavigationProp>();\r\n  const route = useRoute<AnimalFormScreenRouteProp>();\r\n  const { animalId } = route.params || {};\r\n  const isEditMode = !!animalId;\r\n  \r\n  const [loading, setLoading] = useState(isEditMode);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [formSubmitting, setFormSubmitting] = useState(false);\r\n  \r\n  // Форма животного\r\n  const [number, setNumber] = useState('');\r\n  const [responder, setResponder] = useState('');\r\n  const [group, setGroup] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [birthDate, setBirthDate] = useState<string | null>(null);\r\n  const [lastDeliveryDate, setLastDeliveryDate] = useState<string | null>(null);\r\n  const [nextDeliveryDate, setNextDeliveryDate] = useState<string | null>(null);\r\n  const [lastInseminationDate, setLastInseminationDate] = useState<string | null>(null);\r\n  const [lactationNumber, setLactationNumber] = useState('');\r\n  const [inseminationCount, setInseminationCount] = useState('');\r\n  const [averageMilk, setAverageMilk] = useState('');\r\n  const [milkByLactation, setMilkByLactation] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n  \r\n  // Валидация\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  \r\n  // Загрузка данных животного в режиме редактирования\r\n  useEffect(() => {\r\n    const loadAnimal = async () => {\r\n      if (!isEditMode) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        \r\n        const animal = await getAnimalById(animalId);\r\n        if (!animal) {\r\n          throw new Error('Животное не найдено');\r\n        }\r\n        \r\n        setNumber(animal.number);\r\n        setResponder(animal.responder || '');\r\n        setGroup(animal.group || '');\r\n        setType(animal.type);\r\n        setGender(animal.gender);\r\n        setBirthDate(animal.birthDate || null);\r\n        setLastDeliveryDate(animal.lastDeliveryDate || null);\r\n        setNextDeliveryDate(animal.nextDeliveryDate || null);\r\n        setLastInseminationDate(animal.lastInseminationDate || null);\r\n        setLactationNumber(animal.lactationNumber?.toString() || '');\r\n        setInseminationCount(animal.inseminationCount?.toString() || '');\r\n        setAverageMilk(animal.averageMilk?.toString() || '');\r\n        setMilkByLactation(animal.milkByLactation?.toString() || '');\r\n        setNotes(animal.notes || '');\r\n      } catch (err) {\r\n        setError('Не удалось загрузить данные животного');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadAnimal();\r\n  }, [isEditMode, animalId]);\r\n  \r\n  // Валидация формы\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!number.trim()) {\r\n      newErrors.number = 'Номер животного обязателен';\r\n    }\r\n    \r\n    if (!type) {\r\n      newErrors.type = 'Тип животного обязателен';\r\n    }\r\n    \r\n    if (!gender) {\r\n      newErrors.gender = 'Пол животного обязателен';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n  // Сохранение животного\r\n  const handleSave = async () => {\r\n    Keyboard.dismiss();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setFormSubmitting(true);\r\n      \r\n      const animalData: Omit<Animal, 'id'> = {\r\n        number,\r\n        responder: responder || undefined,\r\n        group: group || undefined,\r\n        type,\r\n        gender: gender as 'male' | 'female',\r\n        birthDate: birthDate || undefined,\r\n        lastDeliveryDate: lastDeliveryDate || undefined,\r\n        nextDeliveryDate: nextDeliveryDate || undefined,\r\n        lastInseminationDate: lastInseminationDate || undefined,\r\n        lactationNumber: lactationNumber ? parseInt(lactationNumber, 10) : undefined,\r\n        inseminationCount: inseminationCount ? parseInt(inseminationCount, 10) : undefined,\r\n        averageMilk: averageMilk ? parseFloat(averageMilk) : undefined,\r\n        milkByLactation: milkByLactation ? parseFloat(milkByLactation) : undefined,\r\n        notes: notes || undefined,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      if (isEditMode) {\r\n        await updateAnimal({ ...animalData, id: animalId });\r\n        navigation.goBack();\r\n      } else {\r\n        const newAnimalId = await addAnimal(animalData);\r\n        navigation.replace('AnimalDetail', { animalId: newAnimalId });\r\n      }\r\n    } catch (err) {\r\n      Alert.alert(\r\n        'Ошибка',\r\n        isEditMode\r\n          ? 'Не удалось обновить данные животного'\r\n          : 'Не удалось добавить новое животное'\r\n      );\r\n      console.error(err);\r\n    } finally {\r\n      setFormSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <LoadingScreen message=\"Загрузка данных...\" />;\r\n  }\r\n  \r\n  if (error) {\r\n    return <ErrorScreen message={error} onRetry={() => navigation.goBack()} />;\r\n  }\r\n  \r\n  const animalTypeOptions = Object.entries(ANIMAL_TYPES).map(([_, label]) => ({\r\n    label,\r\n    value: label,\r\n  }));\r\n  \r\n  const genderOptions = [\r\n    { label: 'Женский', value: 'female' },\r\n    { label: 'Мужской', value: 'male' },\r\n  ];\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Text style={styles.sectionTitle}>Основная информация</Text>\r\n          \r\n          <View style={styles.formGroup}>\r\n            <Text style={styles.label}>\r\n              Номер животного <Text style={styles.required}>*</Text>\r\n            </Text>\r\n            <TextInput\r\n              style={[styles.textInput, errors.number && styles.inputError]}\r\n              value={number}\r\n              onChangeText={setNumber}\r\n              placeholder=\"Введите номер животного\"\r\n              maxLength={20}\r\n            />\r\n            {errors.number && (\r\n              <HelperText type=\"error\" visible={!!errors.number}>\r\n                {errors.number}\r\n              </HelperText>\r\n            )}\r\n          </View>\r\n          \r\n          <View style={styles.formGroup}>\r\n            <Text style={styles.label}>Респондер</Text>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              value={responder}\r\n              onChangeText={setResponder}\r\n              placeholder=\"Введите номер респондера\"\r\n              maxLength={20}\r\n              keyboardType=\"numeric\"\r\n            />\r\n          </View>\r\n          \r\n          <View style={styles.formGroup}>\r\n            <Text style={styles.label}>Группа</Text>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              value={group}\r\n              onChangeText={setGroup}\r\n              placeholder=\"Введите группу\"\r\n              maxLength={20}\r\n            />\r\n          </View>\r\n          \r\n          <SelectField\r\n            label=\"Тип животного\"\r\n            value={type}\r\n            onChange={value => setType(value as string)}\r\n            options={animalTypeOptions}\r\n            error={errors.type}\r\n            required\r\n            zIndex={3000}\r\n          />\r\n          \r\n          <SelectField\r\n            label=\"Пол\"\r\n            value={gender}\r\n            onChange={value => setGender(value as string)}\r\n            options={genderOptions}\r\n            error={errors.gender}\r\n            required\r\n            zIndex={2900}\r\n          />\r\n          \r\n          <DatePickerField\r\n            label=\"Дата рождения\"\r\n            value={birthDate}\r\n            onChange={setBirthDate}\r\n          />\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      {gender === 'female' && (\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={styles.sectionTitle}>Репродуктивная информация</Text>\r\n            \r\n            <DatePickerField\r\n              label=\"Дата последнего отёла\"\r\n              value={lastDeliveryDate}\r\n              onChange={setLastDeliveryDate}\r\n            />\r\n            \r\n            <DatePickerField\r\n              label=\"Ожидаемая дата следующего отёла\"\r\n              value={nextDeliveryDate}\r\n              onChange={setNextDeliveryDate}\r\n            />\r\n            \r\n            <DatePickerField\r\n              label=\"Дата последнего осеменения\"\r\n              value={lastInseminationDate}\r\n              onChange={setLastInseminationDate}\r\n            />\r\n            \r\n            <NumericInput\r\n              label=\"Количество осеменений\"\r\n              value={inseminationCount}\r\n              onChange={setInseminationCount}\r\n              placeholder=\"Введите количество\"\r\n              decimal={false}\r\n              min={0}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n      \r\n      {gender === 'female' && (\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={styles.sectionTitle}>Лактация</Text>\r\n            \r\n            <NumericInput\r\n              label=\"Номер лактации\"\r\n              value={lactationNumber}\r\n              onChange={setLactationNumber}\r\n              placeholder=\"Введите номер\"\r\n              decimal={false}\r\n              min={1}\r\n            />\r\n            \r\n            <NumericInput\r\n              label=\"Средний удой\"\r\n              value={averageMilk}\r\n              onChange={setAverageMilk}\r\n              placeholder=\"Введите значение\"\r\n              decimal={true}\r\n              min={0}\r\n              suffix=\"кг\"\r\n            />\r\n            \r\n            <NumericInput\r\n              label=\"Молоко по лактации\"\r\n              value={milkByLactation}\r\n              onChange={setMilkByLactation}\r\n              placeholder=\"Введите значение\"\r\n              decimal={true}\r\n              min={0}\r\n              suffix=\"кг\"\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n      \r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Text style={styles.sectionTitle}>Дополнительная информация</Text>\r\n          \r\n          <View style={styles.formGroup}>\r\n            <Text style={styles.label}>Примечания</Text>\r\n            <TextInput\r\n              style={[styles.textInput, styles.textArea]}\r\n              value={notes}\r\n              onChangeText={setNotes}\r\n              placeholder=\"Введите примечания\"\r\n              multiline\r\n              numberOfLines={4}\r\n            />\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      <View style={styles.buttonsContainer}>\r\n        <Button\r\n          mode=\"contained\"\r\n          onPress={handleSave}\r\n          loading={formSubmitting}\r\n          disabled={formSubmitting}\r\n          style={styles.saveButton}\r\n        >\r\n          {isEditMode ? 'Сохранить изменения' : 'Добавить животное'}\r\n        </Button>\r\n        \r\n        <Button\r\n          mode=\"outlined\"\r\n          onPress={() => navigation.goBack()}\r\n          style={styles.cancelButton}\r\n          disabled={formSubmitting}\r\n        >\r\n          Отмена\r\n        </Button>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  card: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n    elevation: 2,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    color: '#424242',\r\n  },\r\n  formGroup: {\r\n    marginBottom: 16,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n    color: '#424242',\r\n  },\r\n  required: {\r\n    color: '#D32F2F',\r\n  },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#BDBDBD',\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    fontSize: 16,\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  inputError: {\r\n    borderColor: '#D32F2F',\r\n  },\r\n  textArea: {\r\n    height: 100,\r\n    textAlignVertical: 'top',\r\n  },\r\n  buttonsContainer: {\r\n    padding: 16,\r\n    marginBottom: 24,\r\n  },\r\n  saveButton: {\r\n    marginBottom: 8,\r\n  },\r\n  cancelButton: {\r\n    borderColor: '#BDBDBD',\r\n  },\r\n});\r\n\r\nexport default AnimalFormScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}