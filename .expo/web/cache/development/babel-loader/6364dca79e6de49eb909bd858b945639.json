{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { DefaultTheme } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport SettingsScreen from \"./src/screens/settings/SettingsScreen\";\nimport DirectoriesScreen from \"./src/screens/directories/DirectoriesScreen\";\nimport SimpleAnimalListScreen from \"./src/screens/animals/SimpleAnimalListScreen\";\nimport SimpleCalendarScreen from \"./src/screens/calendar/SimpleCalendarScreen\";\nimport SimpleExportScreen from \"./src/screens/export/SimpleExportScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#2196F3'\n  })\n});\nvar DatabaseContext = createContext({\n  isDbReady: false\n});\nexport var useDatabase = function useDatabase() {\n  return useContext(DatabaseContext);\n};\nvar DatabaseProvider = function DatabaseProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDbReady = _useState2[0],\n    setIsDbReady = _useState2[1];\n  useEffect(function () {\n    setTimeout(function () {\n      console.log('БД инициализирована');\n      setIsDbReady(true);\n    }, 1500);\n  }, []);\n  return _jsx(DatabaseContext.Provider, {\n    value: {\n      isDbReady: isDbReady\n    },\n    children: children\n  });\n};\nvar AnimalStack = createNativeStackNavigator();\nvar CalendarStack = createNativeStackNavigator();\nvar DirectoriesStack = createNativeStackNavigator();\nvar ExportStack = createNativeStackNavigator();\nvar SettingsStack = createNativeStackNavigator();\nvar AnimalStackNavigator = function AnimalStackNavigator() {\n  return _jsx(AnimalStack.Navigator, {\n    children: _jsx(AnimalStack.Screen, {\n      name: \"AnimalList\",\n      component: SimpleAnimalListScreen,\n      options: {\n        title: 'Животные'\n      }\n    })\n  });\n};\nvar CalendarStackNavigator = function CalendarStackNavigator() {\n  return _jsx(CalendarStack.Navigator, {\n    children: _jsx(CalendarStack.Screen, {\n      name: \"Calendar\",\n      component: SimpleCalendarScreen,\n      options: {\n        title: 'Календарь'\n      }\n    })\n  });\n};\nvar DirectoriesStackNavigator = function DirectoriesStackNavigator() {\n  return _jsx(DirectoriesStack.Navigator, {\n    children: _jsx(DirectoriesStack.Screen, {\n      name: \"Directories\",\n      component: DirectoriesScreen,\n      options: {\n        title: 'Справочники'\n      }\n    })\n  });\n};\nvar ExportStackNavigator = function ExportStackNavigator() {\n  return _jsx(ExportStack.Navigator, {\n    children: _jsx(ExportStack.Screen, {\n      name: \"Export\",\n      component: SimpleExportScreen,\n      options: {\n        title: 'Экспорт'\n      }\n    })\n  });\n};\nvar SettingsStackNavigator = function SettingsStackNavigator() {\n  return _jsx(SettingsStack.Navigator, {\n    children: _jsx(SettingsStack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Настройки'\n      }\n    })\n  });\n};\nvar Tab = createBottomTabNavigator();\nvar MainNavigator = function MainNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#2196F3',\n      tabBarInactiveTintColor: '#757575',\n      headerShown: false\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Animals\",\n      component: AnimalStackNavigator,\n      options: {\n        tabBarLabel: 'Животные',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(MaterialIcons, {\n            name: \"pets\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Calendar\",\n      component: CalendarStackNavigator,\n      options: {\n        tabBarLabel: 'Календарь',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(MaterialIcons, {\n            name: \"event\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Directories\",\n      component: DirectoriesStackNavigator,\n      options: {\n        tabBarLabel: 'Справочники',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(MaterialIcons, {\n            name: \"menu-book\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Export\",\n      component: ExportStackNavigator,\n      options: {\n        tabBarLabel: 'Экспорт',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(MaterialIcons, {\n            name: \"cloud-download\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsStackNavigator,\n      options: {\n        tabBarLabel: 'Настройки',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color,\n            size = _ref6.size;\n          return _jsx(MaterialIcons, {\n            name: \"settings\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n};\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(DatabaseProvider, {\n        children: _jsxs(NavigationContainer, {\n          children: [_jsx(MainNavigator, {}), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","SafeAreaProvider","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","StatusBar","Provider","PaperProvider","DefaultTheme","MaterialIcons","SettingsScreen","DirectoriesScreen","SimpleAnimalListScreen","SimpleCalendarScreen","SimpleExportScreen","jsx","_jsx","jsxs","_jsxs","theme","_objectSpread","colors","primary","DatabaseContext","isDbReady","useDatabase","DatabaseProvider","_ref","children","_useState","_useState2","_slicedToArray","setIsDbReady","setTimeout","console","log","value","AnimalStack","CalendarStack","DirectoriesStack","ExportStack","SettingsStack","AnimalStackNavigator","Navigator","Screen","name","component","options","title","CalendarStackNavigator","DirectoriesStackNavigator","ExportStackNavigator","SettingsStackNavigator","Tab","MainNavigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","tabBarLabel","tabBarIcon","_ref2","color","size","_ref3","_ref4","_ref5","_ref6","App","style"],"sources":["C:/vet-assistant/App.tsx"],"sourcesContent":["// App.tsx - с интегрированными упрощенными экранами\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport { DefaultTheme } from 'react-native-paper';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\n// Импорт реальных экранов\r\nimport SettingsScreen from './src/screens/settings/SettingsScreen';\r\nimport DirectoriesScreen from './src/screens/directories/DirectoriesScreen';\r\nimport SimpleAnimalListScreen from './src/screens/animals/SimpleAnimalListScreen';\r\nimport SimpleCalendarScreen from './src/screens/calendar/SimpleCalendarScreen';\r\nimport SimpleExportScreen from './src/screens/export/SimpleExportScreen';\r\n\r\n// Простая тема\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: '#2196F3',\r\n  },\r\n};\r\n\r\n// Очень простой DatabaseContext\r\nconst DatabaseContext = createContext({ isDbReady: false });\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\n// Очень простой DatabaseProvider\r\nconst DatabaseProvider = ({ children }) => {\r\n  const [isDbReady, setIsDbReady] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // Имитация инициализации БД\r\n    setTimeout(() => {\r\n      console.log('БД инициализирована');\r\n      setIsDbReady(true);\r\n    }, 1500);\r\n  }, []);\r\n  \r\n  return (\r\n    <DatabaseContext.Provider value={{ isDbReady }}>\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n};\r\n\r\n// Создаем стеки навигации\r\nconst AnimalStack = createNativeStackNavigator();\r\nconst CalendarStack = createNativeStackNavigator();\r\nconst DirectoriesStack = createNativeStackNavigator();\r\nconst ExportStack = createNativeStackNavigator();\r\nconst SettingsStack = createNativeStackNavigator();\r\n\r\nconst AnimalStackNavigator = () => (\r\n  <AnimalStack.Navigator>\r\n    <AnimalStack.Screen \r\n      name=\"AnimalList\" \r\n      component={SimpleAnimalListScreen} \r\n      options={{ title: 'Животные' }} \r\n    />\r\n  </AnimalStack.Navigator>\r\n);\r\n\r\nconst CalendarStackNavigator = () => (\r\n  <CalendarStack.Navigator>\r\n    <CalendarStack.Screen \r\n      name=\"Calendar\" \r\n      component={SimpleCalendarScreen} \r\n      options={{ title: 'Календарь' }} \r\n    />\r\n  </CalendarStack.Navigator>\r\n);\r\n\r\nconst DirectoriesStackNavigator = () => (\r\n  <DirectoriesStack.Navigator>\r\n    <DirectoriesStack.Screen \r\n      name=\"Directories\" \r\n      component={DirectoriesScreen} \r\n      options={{ title: 'Справочники' }} \r\n    />\r\n  </DirectoriesStack.Navigator>\r\n);\r\n\r\nconst ExportStackNavigator = () => (\r\n  <ExportStack.Navigator>\r\n    <ExportStack.Screen \r\n      name=\"Export\" \r\n      component={SimpleExportScreen} \r\n      options={{ title: 'Экспорт' }} \r\n    />\r\n  </ExportStack.Navigator>\r\n);\r\n\r\nconst SettingsStackNavigator = () => (\r\n  <SettingsStack.Navigator>\r\n    <SettingsStack.Screen \r\n      name=\"Settings\" \r\n      component={SettingsScreen} \r\n      options={{ title: 'Настройки' }} \r\n    />\r\n  </SettingsStack.Navigator>\r\n);\r\n\r\n// Нижняя навигация\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarActiveTintColor: '#2196F3',\r\n        tabBarInactiveTintColor: '#757575',\r\n        headerShown: false\r\n      }}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Animals\" \r\n        component={AnimalStackNavigator} \r\n        options={{\r\n          tabBarLabel: 'Животные',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialIcons name=\"pets\" color={color} size={size} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Calendar\" \r\n        component={CalendarStackNavigator} \r\n        options={{\r\n          tabBarLabel: 'Календарь',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialIcons name=\"event\" color={color} size={size} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Directories\" \r\n        component={DirectoriesStackNavigator} \r\n        options={{\r\n          tabBarLabel: 'Справочники',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialIcons name=\"menu-book\" color={color} size={size} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Export\" \r\n        component={ExportStackNavigator} \r\n        options={{\r\n          tabBarLabel: 'Экспорт',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialIcons name=\"cloud-download\" color={color} size={size} />\r\n          )\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Settings\" \r\n        component={SettingsStackNavigator} \r\n        options={{\r\n          tabBarLabel: 'Настройки',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialIcons name=\"settings\" color={color} size={size} />\r\n          )\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaProvider>\r\n      <PaperProvider theme={theme}>\r\n        <DatabaseProvider>\r\n          <NavigationContainer>\r\n            <MainNavigator />\r\n            <StatusBar style=\"auto\" />\r\n          </NavigationContainer>\r\n        </DatabaseProvider>\r\n      </PaperProvider>\r\n    </SafeAreaProvider>\r\n  );\r\n}"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAC9D,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,aAAa,QAAQ,oBAAoB;AAGlD,OAAOC,cAAc;AACrB,OAAOC,iBAAiB;AACxB,OAAOC,sBAAsB;AAC7B,OAAOC,oBAAoB;AAC3B,OAAOC,kBAAkB;AAAgD,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGzE,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KACNZ,YAAY;EACfa,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACDZ,YAAY,CAACa,MAAM;IACtBC,OAAO,EAAE;EAAS;AACnB,EACF;AAGD,IAAMC,eAAe,GAAG1B,aAAa,CAAC;EAAE2B,SAAS,EAAE;AAAM,CAAC,CAAC;AAC3D,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAAS3B,UAAU,CAACyB,eAAe,CAAC;AAAA;AAG5D,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAClC,IAAAC,SAAA,GAAkC9B,QAAQ,CAAC,KAAK,CAAC;IAAA+B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CL,SAAS,GAAAM,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B9B,SAAS,CAAC,YAAM;IAEdiC,UAAU,CAAC,YAAM;MACfC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCH,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OACEhB,IAAA,CAACO,eAAe,CAACjB,QAAQ;IAAC8B,KAAK,EAAE;MAAEZ,SAAS,EAATA;IAAU,CAAE;IAAAI,QAAA,EAC5CA;EAAQ,CACe,CAAC;AAE/B,CAAC;AAGD,IAAMS,WAAW,GAAGjC,0BAA0B,CAAC,CAAC;AAChD,IAAMkC,aAAa,GAAGlC,0BAA0B,CAAC,CAAC;AAClD,IAAMmC,gBAAgB,GAAGnC,0BAA0B,CAAC,CAAC;AACrD,IAAMoC,WAAW,GAAGpC,0BAA0B,CAAC,CAAC;AAChD,IAAMqC,aAAa,GAAGrC,0BAA0B,CAAC,CAAC;AAElD,IAAMsC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA;EAAA,OACxB1B,IAAA,CAACqB,WAAW,CAACM,SAAS;IAAAf,QAAA,EACpBZ,IAAA,CAACqB,WAAW,CAACO,MAAM;MACjBC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAElC,sBAAuB;MAClCmC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAW;IAAE,CAChC;EAAC,CACmB,CAAC;AAAA,CACzB;AAED,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA;EAAA,OAC1BjC,IAAA,CAACsB,aAAa,CAACK,SAAS;IAAAf,QAAA,EACtBZ,IAAA,CAACsB,aAAa,CAACM,MAAM;MACnBC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEjC,oBAAqB;MAChCkC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAY;IAAE,CACjC;EAAC,CACqB,CAAC;AAAA,CAC3B;AAED,IAAME,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA;EAAA,OAC7BlC,IAAA,CAACuB,gBAAgB,CAACI,SAAS;IAAAf,QAAA,EACzBZ,IAAA,CAACuB,gBAAgB,CAACK,MAAM;MACtBC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAEnC,iBAAkB;MAC7BoC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAc;IAAE,CACnC;EAAC,CACwB,CAAC;AAAA,CAC9B;AAED,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA;EAAA,OACxBnC,IAAA,CAACwB,WAAW,CAACG,SAAS;IAAAf,QAAA,EACpBZ,IAAA,CAACwB,WAAW,CAACI,MAAM;MACjBC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEhC,kBAAmB;MAC9BiC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAU;IAAE,CAC/B;EAAC,CACmB,CAAC;AAAA,CACzB;AAED,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA;EAAA,OAC1BpC,IAAA,CAACyB,aAAa,CAACE,SAAS;IAAAf,QAAA,EACtBZ,IAAA,CAACyB,aAAa,CAACG,MAAM;MACnBC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEpC,cAAe;MAC1BqC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAY;IAAE,CACjC;EAAC,CACqB,CAAC;AAAA,CAC3B;AAGD,IAAMK,GAAG,GAAGlD,wBAAwB,CAAC,CAAC;AAEtC,IAAMmD,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,OACEpC,KAAA,CAACmC,GAAG,CAACV,SAAS;IACZY,aAAa,EAAE;MACbC,qBAAqB,EAAE,SAAS;MAChCC,uBAAuB,EAAE,SAAS;MAClCC,WAAW,EAAE;IACf,CAAE;IAAA9B,QAAA,GAEFZ,IAAA,CAACqC,GAAG,CAACT,MAAM;MACTC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAEJ,oBAAqB;MAChCK,OAAO,EAAE;QACPY,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;UAAA,IAAKC,KAAK,GAAAD,KAAA,CAALC,KAAK;YAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;UAAA,OACxB/C,IAAA,CAACP,aAAa;YAACoC,IAAI,EAAC,MAAM;YAACiB,KAAK,EAAEA,KAAM;YAACC,IAAI,EAAEA;UAAK,CAAE,CAAC;QAAA;MAE3D;IAAE,CACH,CAAC,EACF/C,IAAA,CAACqC,GAAG,CAACT,MAAM;MACTC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEG,sBAAuB;MAClCF,OAAO,EAAE;QACPY,WAAW,EAAE,WAAW;QACxBC,UAAU,EAAE,SAAZA,UAAUA,CAAAI,KAAA;UAAA,IAAKF,KAAK,GAAAE,KAAA,CAALF,KAAK;YAAEC,IAAI,GAAAC,KAAA,CAAJD,IAAI;UAAA,OACxB/C,IAAA,CAACP,aAAa;YAACoC,IAAI,EAAC,OAAO;YAACiB,KAAK,EAAEA,KAAM;YAACC,IAAI,EAAEA;UAAK,CAAE,CAAC;QAAA;MAE5D;IAAE,CACH,CAAC,EACF/C,IAAA,CAACqC,GAAG,CAACT,MAAM;MACTC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAEI,yBAA0B;MACrCH,OAAO,EAAE;QACPY,WAAW,EAAE,aAAa;QAC1BC,UAAU,EAAE,SAAZA,UAAUA,CAAAK,KAAA;UAAA,IAAKH,KAAK,GAAAG,KAAA,CAALH,KAAK;YAAEC,IAAI,GAAAE,KAAA,CAAJF,IAAI;UAAA,OACxB/C,IAAA,CAACP,aAAa;YAACoC,IAAI,EAAC,WAAW;YAACiB,KAAK,EAAEA,KAAM;YAACC,IAAI,EAAEA;UAAK,CAAE,CAAC;QAAA;MAEhE;IAAE,CACH,CAAC,EACF/C,IAAA,CAACqC,GAAG,CAACT,MAAM;MACTC,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAEK,oBAAqB;MAChCJ,OAAO,EAAE;QACPY,WAAW,EAAE,SAAS;QACtBC,UAAU,EAAE,SAAZA,UAAUA,CAAAM,KAAA;UAAA,IAAKJ,KAAK,GAAAI,KAAA,CAALJ,KAAK;YAAEC,IAAI,GAAAG,KAAA,CAAJH,IAAI;UAAA,OACxB/C,IAAA,CAACP,aAAa;YAACoC,IAAI,EAAC,gBAAgB;YAACiB,KAAK,EAAEA,KAAM;YAACC,IAAI,EAAEA;UAAK,CAAE,CAAC;QAAA;MAErE;IAAE,CACH,CAAC,EACF/C,IAAA,CAACqC,GAAG,CAACT,MAAM;MACTC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEM,sBAAuB;MAClCL,OAAO,EAAE;QACPY,WAAW,EAAE,WAAW;QACxBC,UAAU,EAAE,SAAZA,UAAUA,CAAAO,KAAA;UAAA,IAAKL,KAAK,GAAAK,KAAA,CAALL,KAAK;YAAEC,IAAI,GAAAI,KAAA,CAAJJ,IAAI;UAAA,OACxB/C,IAAA,CAACP,aAAa;YAACoC,IAAI,EAAC,UAAU;YAACiB,KAAK,EAAEA,KAAM;YAACC,IAAI,EAAEA;UAAK,CAAE,CAAC;QAAA;MAE/D;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB,CAAC;AAED,eAAe,SAASK,GAAGA,CAAA,EAAG;EAC5B,OACEpD,IAAA,CAACf,gBAAgB;IAAA2B,QAAA,EACfZ,IAAA,CAACT,aAAa;MAACY,KAAK,EAAEA,KAAM;MAAAS,QAAA,EAC1BZ,IAAA,CAACU,gBAAgB;QAAAE,QAAA,EACfV,KAAA,CAAChB,mBAAmB;UAAA0B,QAAA,GAClBZ,IAAA,CAACsC,aAAa,IAAE,CAAC,EACjBtC,IAAA,CAACX,SAAS;YAACgE,KAAK,EAAC;UAAM,CAAE,CAAC;QAAA,CACP;MAAC,CACN;IAAC,CACN;EAAC,CACA,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module"}