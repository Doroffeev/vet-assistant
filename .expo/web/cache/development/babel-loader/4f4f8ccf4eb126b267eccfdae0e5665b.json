{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { theme } from \"./src/styles/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DatabaseContext = createContext({\n  isDbReady: true,\n  refreshDb: function refreshDb() {}\n});\nexport var useDatabase = function useDatabase() {\n  return useContext(DatabaseContext);\n};\nvar DatabaseProvider = function DatabaseProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 1),\n    isDbReady = _useState2[0];\n  var refreshDb = function refreshDb() {\n    return console.log('Mock refresh');\n  };\n  return _jsx(DatabaseContext.Provider, {\n    value: {\n      isDbReady: isDbReady,\n      refreshDb: refreshDb\n    },\n    children: children\n  });\n};\nvar HomeScreen = function HomeScreen() {\n  var _useDatabase = useDatabase(),\n    isDbReady = _useDatabase.isDbReady;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u0438\\u0439 \\u044D\\u043A\\u0440\\u0430\\u043D \\u0441 DatabaseProvider\"\n    }), _jsxs(Text, {\n      children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0411\\u0414: \", isDbReady ? 'Готова' : 'Инициализация']\n    })]\n  });\n};\nvar SettingsScreen = function SettingsScreen() {\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsx(Text, {\n      style: styles.text,\n      children: \"\\u042D\\u043A\\u0440\\u0430\\u043D \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0435\\u043A\"\n    })\n  });\n};\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(DatabaseProvider, {\n        children: _jsxs(NavigationContainer, {\n          children: [_jsxs(Tab.Navigator, {\n            children: [_jsx(Tab.Screen, {\n              name: \"Home\",\n              component: HomeScreen\n            }), _jsx(Tab.Screen, {\n              name: \"Settings\",\n              component: SettingsScreen\n            })]\n          }), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","createContext","useContext","useState","View","Text","StyleSheet","StatusBar","SafeAreaProvider","NavigationContainer","createBottomTabNavigator","Provider","PaperProvider","theme","jsx","_jsx","jsxs","_jsxs","DatabaseContext","isDbReady","refreshDb","useDatabase","DatabaseProvider","_ref","children","_useState","_useState2","_slicedToArray","console","log","value","HomeScreen","_useDatabase","style","styles","screen","text","SettingsScreen","Tab","App","Navigator","Screen","name","component","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom"],"sources":["C:/vet-assistant/App.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport { theme } from './src/styles/theme';\r\n\r\n// Создаем мок DatabaseContext\r\nconst DatabaseContext = createContext({ isDbReady: true, refreshDb: () => {} });\r\nexport const useDatabase = () => useContext(DatabaseContext);\r\n\r\n// Простой мок DatabaseProvider\r\nconst DatabaseProvider = ({ children }) => {\r\n  const [isDbReady] = useState(true); // Всегда готова\r\n  const refreshDb = () => console.log('Mock refresh');\r\n  \r\n  return (\r\n    <DatabaseContext.Provider value={{ isDbReady, refreshDb }}>\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n};\r\n\r\n// Простые экраны, которые используют контекст БД\r\nconst HomeScreen = () => {\r\n  const { isDbReady } = useDatabase();\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text style={styles.text}>Домашний экран с DatabaseProvider</Text>\r\n      <Text>Статус БД: {isDbReady ? 'Готова' : 'Инициализация'}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst SettingsScreen = () => (\r\n  <View style={styles.screen}>\r\n    <Text style={styles.text}>Экран настроек</Text>\r\n  </View>\r\n);\r\n\r\n// Создаем навигатор\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaProvider>\r\n      <PaperProvider theme={theme}>\r\n        <DatabaseProvider>\r\n          <NavigationContainer>\r\n            <Tab.Navigator>\r\n              <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n              <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n            </Tab.Navigator>\r\n            <StatusBar style=\"auto\" />\r\n          </NavigationContainer>\r\n        </DatabaseProvider>\r\n      </PaperProvider>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}