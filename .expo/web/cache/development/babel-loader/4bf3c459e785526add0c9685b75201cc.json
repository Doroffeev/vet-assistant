{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, useTheme } from 'react-native-paper';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SelectField = function SelectField(_ref) {\n  var label = _ref.label,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    options = _ref.options,\n    error = _ref.error,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? 'Выберите значение' : _ref$placeholder,\n    _ref$required = _ref.required,\n    required = _ref$required === void 0 ? false : _ref$required,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$zIndex = _ref.zIndex,\n    zIndex = _ref$zIndex === void 0 ? 1 : _ref$zIndex;\n  var theme = useTheme();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var _useState3 = useState(options),\n    _useState4 = _slicedToArray(_useState3, 2),\n    items = _useState4[0],\n    setItems = _useState4[1];\n  return _jsxs(View, {\n    style: [styles.container, {\n      zIndex: zIndex\n    }],\n    children: [_jsxs(Text, {\n      style: styles.label,\n      children: [label, required && _jsx(Text, {\n        style: {\n          color: theme.colors.error\n        },\n        children: \" *\"\n      })]\n    }), _jsx(DropDownPicker, {\n      open: open,\n      value: value,\n      items: items,\n      setOpen: setOpen,\n      setValue: function setValue(callback) {\n        var newValue = callback(value);\n        onChange(newValue);\n      },\n      setItems: setItems,\n      placeholder: placeholder,\n      style: [styles.dropdown, error ? {\n        borderColor: theme.colors.error\n      } : null, disabled ? {\n        backgroundColor: '#F5F5F5',\n        opacity: 0.7\n      } : null],\n      dropDownContainerStyle: styles.dropDownContainer,\n      textStyle: styles.dropdownText,\n      placeholderStyle: styles.placeholderText,\n      disabledStyle: {\n        opacity: 0.6\n      },\n      disabled: disabled,\n      listMode: \"SCROLLVIEW\",\n      autoScroll: true,\n      closeAfterSelecting: true\n    }), error && _jsx(Text, {\n      style: [styles.errorText, {\n        color: theme.colors.error\n      }],\n      children: error\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 16\n  },\n  label: {\n    fontSize: 14,\n    marginBottom: 4\n  },\n  dropdown: {\n    borderColor: '#BDBDBD',\n    borderRadius: 4,\n    backgroundColor: '#FFFFFF'\n  },\n  dropDownContainer: {\n    borderColor: '#BDBDBD'\n  },\n  dropdownText: {\n    fontSize: 16,\n    color: '#212121'\n  },\n  placeholderText: {\n    color: '#9E9E9E'\n  },\n  errorText: {\n    fontSize: 12,\n    marginTop: 4\n  }\n});\nexport default SelectField;","map":{"version":3,"names":["React","useState","View","StyleSheet","Text","useTheme","DropDownPicker","jsx","_jsx","jsxs","_jsxs","SelectField","_ref","label","value","onChange","options","error","_ref$placeholder","placeholder","_ref$required","required","_ref$disabled","disabled","_ref$zIndex","zIndex","theme","_useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","items","setItems","style","styles","container","children","color","colors","setValue","callback","newValue","dropdown","borderColor","backgroundColor","opacity","dropDownContainerStyle","dropDownContainer","textStyle","dropdownText","placeholderStyle","placeholderText","disabledStyle","listMode","autoScroll","closeAfterSelecting","errorText","create","marginBottom","fontSize","borderRadius","marginTop"],"sources":["C:/vet-assistant/src/components/SelectField.tsx"],"sourcesContent":["// src/components/SelectField.tsx - Поле выбора из списка\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Text, useTheme } from 'react-native-paper';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\ninterface SelectOption {\r\n  label: string;\r\n  value: string | number;\r\n}\r\n\r\ninterface SelectFieldProps {\r\n  label: string;\r\n  value: string | number | null;\r\n  onChange: (value: string | number | null) => void;\r\n  options: SelectOption[];\r\n  error?: string;\r\n  placeholder?: string;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nconst SelectField: React.FC<SelectFieldProps> = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  options,\r\n  error,\r\n  placeholder = 'Выберите значение',\r\n  required = false,\r\n  disabled = false,\r\n  zIndex = 1,\r\n}) => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [items, setItems] = useState(options);\r\n\r\n  return (\r\n    <View style={[styles.container, { zIndex }]}>\r\n      <Text style={styles.label}>\r\n        {label}\r\n        {required && <Text style={{ color: theme.colors.error }}> *</Text>}\r\n      </Text>\r\n      \r\n      <DropDownPicker\r\n        open={open}\r\n        value={value}\r\n        items={items}\r\n        setOpen={setOpen}\r\n        setValue={(callback) => {\r\n          const newValue = callback(value as any);\r\n          onChange(newValue);\r\n        }}\r\n        setItems={setItems}\r\n        placeholder={placeholder}\r\n        style={[\r\n          styles.dropdown,\r\n          error ? { borderColor: theme.colors.error } : null,\r\n          disabled ? { backgroundColor: '#F5F5F5', opacity: 0.7 } : null\r\n        ]}\r\n        dropDownContainerStyle={styles.dropDownContainer}\r\n        textStyle={styles.dropdownText}\r\n        placeholderStyle={styles.placeholderText}\r\n        disabledStyle={{ opacity: 0.6 }}\r\n        disabled={disabled}\r\n        listMode=\"SCROLLVIEW\"\r\n        autoScroll\r\n        closeAfterSelecting\r\n      />\r\n      \r\n      {error && <Text style={[styles.errorText, { color: theme.colors.error }]}>{error}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 16,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    marginBottom: 4,\r\n  },\r\n  dropdown: {\r\n    borderColor: '#BDBDBD',\r\n    borderRadius: 4,\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  dropDownContainer: {\r\n    borderColor: '#BDBDBD',\r\n  },\r\n  dropdownText: {\r\n    fontSize: 16,\r\n    color: '#212121',\r\n  },\r\n  placeholderText: {\r\n    color: '#9E9E9E',\r\n  },\r\n  errorText: {\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nexport default SelectField;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}