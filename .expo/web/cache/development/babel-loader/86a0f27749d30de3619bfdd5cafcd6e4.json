{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from \"./src/styles/theme\";\nimport { DatabaseProvider, useDatabase } from \"./src/context/DatabaseContext\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar DatabaseStatusIndicator = function DatabaseStatusIndicator() {\n  var _useDatabase = useDatabase(),\n    isDbReady = _useDatabase.isDbReady;\n  return _jsx(View, {\n    style: {\n      padding: 10,\n      backgroundColor: isDbReady ? '#d4edda' : '#f8d7da',\n      borderRadius: 5,\n      marginBottom: 20\n    },\n    children: _jsxs(Text, {\n      children: [\"\\u0411\\u0430\\u0437\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \", isDbReady ? 'Готова' : 'Инициализируется...']\n    })\n  });\n};\nvar AnimalsScreen = function AnimalsScreen() {\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"\\u0416\\u0438\\u0432\\u043E\\u0442\\u043D\\u044B\\u0435\"\n    }), _jsx(DatabaseStatusIndicator, {})]\n  });\n};\nvar CalendarScreen = function CalendarScreen() {\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"\\u041A\\u0430\\u043B\\u0435\\u043D\\u0434\\u0430\\u0440\\u044C\"\n    }), _jsx(DatabaseStatusIndicator, {})]\n  });\n};\nvar DirectoriesScreen = function DirectoriesScreen() {\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\\u0438\"\n    }), _jsx(DatabaseStatusIndicator, {})]\n  });\n};\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(DatabaseProvider, {\n        children: _jsxs(NavigationContainer, {\n          children: [_jsxs(Tab.Navigator, {\n            children: [_jsx(Tab.Screen, {\n              name: \"Animals\",\n              component: AnimalsScreen,\n              options: {\n                title: 'Животные',\n                tabBarIcon: function tabBarIcon(_ref) {\n                  var color = _ref.color,\n                    size = _ref.size;\n                  return _jsx(MaterialIcons, {\n                    name: \"pets\",\n                    color: color,\n                    size: size\n                  });\n                }\n              }\n            }), _jsx(Tab.Screen, {\n              name: \"Calendar\",\n              component: CalendarScreen,\n              options: {\n                title: 'Календарь',\n                tabBarIcon: function tabBarIcon(_ref2) {\n                  var color = _ref2.color,\n                    size = _ref2.size;\n                  return _jsx(MaterialIcons, {\n                    name: \"event\",\n                    color: color,\n                    size: size\n                  });\n                }\n              }\n            }), _jsx(Tab.Screen, {\n              name: \"Directories\",\n              component: DirectoriesScreen,\n              options: {\n                title: 'Справочники',\n                tabBarIcon: function tabBarIcon(_ref3) {\n                  var color = _ref3.color,\n                    size = _ref3.size;\n                  return _jsx(MaterialIcons, {\n                    name: \"menu-book\",\n                    color: color,\n                    size: size\n                  });\n                }\n              }\n            })]\n          }), _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","Text","StyleSheet","View","SafeAreaProvider","StatusBar","Provider","PaperProvider","NavigationContainer","createBottomTabNavigator","MaterialIcons","theme","DatabaseProvider","useDatabase","jsxs","_jsxs","jsx","_jsx","DatabaseStatusIndicator","_useDatabase","isDbReady","style","padding","backgroundColor","borderRadius","marginBottom","children","AnimalsScreen","styles","screen","heading","CalendarScreen","DirectoriesScreen","Tab","App","Navigator","Screen","name","component","options","title","tabBarIcon","_ref","color","size","_ref2","_ref3","create","flex","justifyContent","alignItems","fontSize","fontWeight"],"sources":["C:/vet-assistant/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Text, StyleSheet, View } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { theme } from './src/styles/theme';\r\nimport { DatabaseProvider, useDatabase } from './src/context/DatabaseContext';\r\n\r\n// Компонент для отображения статуса БД\r\nconst DatabaseStatusIndicator = () => {\r\n  const { isDbReady } = useDatabase();\r\n  return (\r\n    <View style={{ \r\n      padding: 10, \r\n      backgroundColor: isDbReady ? '#d4edda' : '#f8d7da',\r\n      borderRadius: 5,\r\n      marginBottom: 20 \r\n    }}>\r\n      <Text>База данных: {isDbReady ? 'Готова' : 'Инициализируется...'}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Простые экраны\r\nconst AnimalsScreen = () => (\r\n  <View style={styles.screen}>\r\n    <Text style={styles.heading}>Животные</Text>\r\n    <DatabaseStatusIndicator />\r\n  </View>\r\n);\r\n\r\nconst CalendarScreen = () => (\r\n  <View style={styles.screen}>\r\n    <Text style={styles.heading}>Календарь</Text>\r\n    <DatabaseStatusIndicator />\r\n  </View>\r\n);\r\n\r\nconst DirectoriesScreen = () => (\r\n  <View style={styles.screen}>\r\n    <Text style={styles.heading}>Справочники</Text>\r\n    <DatabaseStatusIndicator />\r\n  </View>\r\n);\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaProvider>\r\n      <PaperProvider theme={theme}>\r\n        <DatabaseProvider>\r\n          <NavigationContainer>\r\n            <Tab.Navigator>\r\n              <Tab.Screen \r\n                name=\"Animals\" \r\n                component={AnimalsScreen} \r\n                options={{\r\n                  title: 'Животные',\r\n                  tabBarIcon: ({ color, size }) => (\r\n                    <MaterialIcons name=\"pets\" color={color} size={size} />\r\n                  )\r\n                }}\r\n              />\r\n              <Tab.Screen \r\n                name=\"Calendar\" \r\n                component={CalendarScreen} \r\n                options={{\r\n                  title: 'Календарь',\r\n                  tabBarIcon: ({ color, size }) => (\r\n                    <MaterialIcons name=\"event\" color={color} size={size} />\r\n                  )\r\n                }}\r\n              />\r\n              <Tab.Screen \r\n                name=\"Directories\" \r\n                component={DirectoriesScreen} \r\n                options={{\r\n                  title: 'Справочники',\r\n                  tabBarIcon: ({ color, size }) => (\r\n                    <MaterialIcons name=\"menu-book\" color={color} size={size} />\r\n                  )\r\n                }}\r\n              />\r\n            </Tab.Navigator>\r\n            <StatusBar style=\"auto\" />\r\n          </NavigationContainer>\r\n        </DatabaseProvider>\r\n      </PaperProvider>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}