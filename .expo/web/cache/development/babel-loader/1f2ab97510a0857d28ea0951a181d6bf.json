{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, Button, Card, HelperText } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { getOperationById, addOperation, updateOperation } from \"../../database/repositories/OperationRepository\";\nimport { getAnimalById, updateAnimal } from \"../../database/repositories/AnimalRepository\";\nimport { getAllExecutors } from \"../../database/repositories/ExecutorRepository\";\nimport { getAllBulls } from \"../../database/repositories/BullRepository\";\nimport { getAllVaccines } from \"../../database/repositories/VaccineRepository\";\nimport { getAllMedicines } from \"../../database/repositories/MedicineRepository\";\nimport { getAllDiseases } from \"../../database/repositories/DiseaseRepository\";\nimport { OPERATION_TYPES } from \"../../constants/appConstants\";\nimport DatePickerField from \"../../components/DatePickerField\";\nimport SelectField from \"../../components/SelectField\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport ErrorScreen from \"../../components/ErrorScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OperationFormScreen = function OperationFormScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var _ref = route.params || {},\n    operationId = _ref.operationId,\n    animalId = _ref.animalId,\n    date = _ref.date;\n  var isEditMode = !!operationId;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    formSubmitting = _useState6[0],\n    setFormSubmitting = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    animal = _useState8[0],\n    setAnimal = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    executors = _useState10[0],\n    setExecutors = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    bulls = _useState12[0],\n    setBulls = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    vaccines = _useState14[0],\n    setVaccines = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    medicines = _useState16[0],\n    setMedicines = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    diseases = _useState18[0],\n    setDiseases = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedAnimalId = _useState20[0],\n    setSelectedAnimalId = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    operationType = _useState22[0],\n    setOperationType = _useState22[1];\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    operationDate = _useState24[0],\n    setOperationDate = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    diagnosis = _useState26[0],\n    setDiagnosis = _useState26[1];\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    medicine = _useState28[0],\n    setMedicine = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    dose = _useState30[0],\n    setDose = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    bull = _useState32[0],\n    setBull = _useState32[1];\n  var _useState33 = useState(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    vaccine = _useState34[0],\n    setVaccine = _useState34[1];\n  var _useState35 = useState(null),\n    _useState36 = _slicedToArray(_useState35, 2),\n    executorId = _useState36[0],\n    setExecutorId = _useState36[1];\n  var _useState37 = useState(''),\n    _useState38 = _slicedToArray(_useState37, 2),\n    result = _useState38[0],\n    setResult = _useState38[1];\n  var _useState39 = useState(''),\n    _useState40 = _slicedToArray(_useState39, 2),\n    notes = _useState40[0],\n    setNotes = _useState40[1];\n  var _useState41 = useState({}),\n    _useState42 = _slicedToArray(_useState41, 2),\n    errors = _useState42[0],\n    setErrors = _useState42[1];\n  useEffect(function () {\n    var loadData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          setLoading(true);\n          var _yield$Promise$all = yield Promise.all([getAllExecutors(), getAllBulls(), getAllVaccines(), getAllMedicines(), getAllDiseases()]),\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 5),\n            executorsData = _yield$Promise$all2[0],\n            bullsData = _yield$Promise$all2[1],\n            vaccinesData = _yield$Promise$all2[2],\n            medicinesData = _yield$Promise$all2[3],\n            diseasesData = _yield$Promise$all2[4];\n          setExecutors(executorsData.map(function (executor) {\n            return {\n              label: executor.name,\n              value: executor.id\n            };\n          }));\n          setBulls(bullsData.map(function (bull) {\n            return {\n              label: \"\" + bull.name + (bull.number ? \" (\" + bull.number + \")\" : ''),\n              value: bull.name\n            };\n          }));\n          setVaccines(vaccinesData.map(function (vaccine) {\n            return {\n              label: vaccine.name,\n              value: vaccine.name\n            };\n          }));\n          setMedicines(medicinesData.map(function (medicine) {\n            return {\n              label: medicine.name,\n              value: medicine.name\n            };\n          }));\n          setDiseases(diseasesData.map(function (disease) {\n            return {\n              label: disease.name,\n              value: disease.name\n            };\n          }));\n          if (animalId) {\n            var animalData = yield getAnimalById(animalId);\n            if (animalData) {\n              setAnimal(animalData);\n              setSelectedAnimalId(animalId);\n            }\n          }\n          if (date) {\n            setOperationDate(date);\n          } else if (!isEditMode) {\n            setOperationDate(new Date().toISOString().split('T')[0]);\n          }\n          if (isEditMode) {\n            var operation = yield getOperationById(operationId);\n            if (!operation) {\n              throw new Error('Операция не найдена');\n            }\n            var _animalData = yield getAnimalById(operation.animalId);\n            if (_animalData) {\n              setAnimal(_animalData);\n            }\n            setSelectedAnimalId(operation.animalId);\n            setOperationType(operation.type);\n            setOperationDate(operation.date);\n            setDiagnosis(operation.diagnosis || '');\n            setMedicine(operation.medicine || '');\n            setDose(operation.dose || '');\n            setBull(operation.bull || '');\n            setVaccine(operation.vaccine || '');\n            setExecutorId(operation.executorId || null);\n            setResult(operation.result || '');\n            setNotes(operation.notes || '');\n          }\n        } catch (err) {\n          setError('Не удалось загрузить данные');\n          console.error(err);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function loadData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadData();\n  }, [isEditMode, operationId, animalId, date]);\n  var validateForm = function validateForm() {\n    var newErrors = {};\n    if (!selectedAnimalId) {\n      newErrors.animalId = 'Животное обязательно';\n    }\n    if (!operationType) {\n      newErrors.type = 'Тип операции обязателен';\n    }\n    if (!operationDate) {\n      newErrors.date = 'Дата операции обязательна';\n    }\n    if (operationType === 'Лечение' && !diagnosis) {\n      newErrors.diagnosis = 'Диагноз обязателен для лечения';\n    }\n    if (operationType === 'Осеменение' && !bull) {\n      newErrors.bull = 'Бык обязателен для осеменения';\n    }\n    if (operationType === 'Вакцинация' && !vaccine) {\n      newErrors.vaccine = 'Вакцина обязательна для вакцинации';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      Keyboard.dismiss();\n      if (!validateForm()) {\n        return;\n      }\n      try {\n        setFormSubmitting(true);\n        var operationData = {\n          animalId: selectedAnimalId,\n          type: operationType,\n          date: operationDate,\n          diagnosis: diagnosis || undefined,\n          medicine: medicine || undefined,\n          dose: dose || undefined,\n          bull: bull || undefined,\n          vaccine: vaccine || undefined,\n          executorId: executorId || undefined,\n          result: result || undefined,\n          notes: notes || undefined,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        if (isEditMode) {\n          yield updateOperation(_objectSpread(_objectSpread({}, operationData), {}, {\n            id: operationId\n          }));\n          navigation.goBack();\n        } else {\n          var newOperationId = yield addOperation(operationData);\n          if (animal && animal.gender === 'female') {\n            var animalToUpdate = {\n              id: animal.id\n            };\n            if (operationType === 'Осеменение') {\n              animalToUpdate.lastInseminationDate = operationDate;\n              if (animal.inseminationCount !== undefined) {\n                animalToUpdate.inseminationCount = animal.inseminationCount + 1;\n              } else {\n                animalToUpdate.inseminationCount = 1;\n              }\n            } else if (operationType === 'Отёл') {\n              animalToUpdate.lastDeliveryDate = operationDate;\n              if (animal.lactationNumber !== undefined) {\n                animalToUpdate.lactationNumber = animal.lactationNumber + 1;\n              } else {\n                animalToUpdate.lactationNumber = 1;\n              }\n            }\n            if (Object.keys(animalToUpdate).length > 1) {\n              yield updateAnimal(animalToUpdate);\n            }\n          }\n          navigation.navigate('OperationDetail', {\n            operationId: newOperationId\n          });\n        }\n      } catch (err) {\n        Alert.alert('Ошибка', isEditMode ? 'Не удалось обновить данные операции' : 'Не удалось добавить новую операцию');\n        console.error(err);\n      } finally {\n        setFormSubmitting(false);\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsx(LoadingScreen, {\n      message: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    });\n  }\n  if (error) {\n    return _jsx(ErrorScreen, {\n      message: error,\n      onRetry: function onRetry() {\n        return navigation.goBack();\n      }\n    });\n  }\n  var operationTypeOptions = Object.entries(OPERATION_TYPES).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n      _ = _ref5[0],\n      label = _ref5[1];\n    return {\n      label: label,\n      value: label\n    };\n  });\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E\\u0431 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\"\n        }), _jsxs(View, {\n          style: styles.animalInfoContainer,\n          children: [_jsx(Text, {\n            style: styles.animalInfoLabel,\n            children: \"\\u0416\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435:\"\n          }), animal ? _jsxs(Text, {\n            style: styles.animalInfoValue,\n            children: [animal.number, \" (\", animal.type, \")\"]\n          }) : _jsx(Text, {\n            style: styles.animalInfoError,\n            children: \"\\u0416\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0435 \\u043D\\u0435 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E\"\n          })]\n        }), _jsx(SelectField, {\n          label: \"\\u0422\\u0438\\u043F \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\",\n          value: operationType,\n          onChange: function onChange(value) {\n            return setOperationType(value);\n          },\n          options: operationTypeOptions,\n          error: errors.type,\n          required: true,\n          zIndex: 3000\n        }), _jsx(DatePickerField, {\n          label: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\",\n          value: operationDate,\n          onChange: setOperationDate,\n          error: errors.date,\n          required: true\n        })]\n      })\n    }), operationType === 'Лечение' && _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043B\\u0435\\u0447\\u0435\\u043D\\u0438\\u0438\"\n        }), _jsx(SelectField, {\n          label: \"\\u0414\\u0438\\u0430\\u0433\\u043D\\u043E\\u0437\",\n          value: diagnosis,\n          onChange: function onChange(value) {\n            return setDiagnosis(value);\n          },\n          options: [{\n            label: 'Ввести вручную...',\n            value: ''\n          }].concat(_toConsumableArray(diseases)),\n          error: errors.diagnosis,\n          required: true,\n          zIndex: 2900\n        }), !diseases.some(function (d) {\n          return d.value === diagnosis;\n        }) && _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(TextInput, {\n            style: [styles.textInput, errors.diagnosis && styles.inputError],\n            value: diagnosis,\n            onChangeText: setDiagnosis,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0438\\u0430\\u0433\\u043D\\u043E\\u0437\"\n          }), errors.diagnosis && _jsx(HelperText, {\n            type: \"error\",\n            visible: !!errors.diagnosis,\n            children: errors.diagnosis\n          })]\n        }), _jsx(SelectField, {\n          label: \"\\u041B\\u0435\\u043A\\u0430\\u0440\\u0441\\u0442\\u0432\\u043E\",\n          value: medicine,\n          onChange: function onChange(value) {\n            return setMedicine(value);\n          },\n          options: [{\n            label: 'Выберите или введите...',\n            value: ''\n          }].concat(_toConsumableArray(medicines)),\n          zIndex: 2800\n        }), !medicines.some(function (m) {\n          return m.value === medicine;\n        }) && medicine !== '' && _jsx(View, {\n          style: styles.formGroup,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            value: medicine,\n            onChangeText: setMedicine,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043B\\u0435\\u043A\\u0430\\u0440\\u0441\\u0442\\u0432\\u0430\"\n          })\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u0414\\u043E\\u0437\\u0430\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            value: dose,\n            onChangeText: setDose,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043E\\u0437\\u0443\"\n          })]\n        })]\n      })\n    }), operationType === 'Осеменение' && _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E\\u0431 \\u043E\\u0441\\u0435\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0438\"\n        }), _jsx(SelectField, {\n          label: \"\\u0411\\u044B\\u043A\",\n          value: bull,\n          onChange: function onChange(value) {\n            return setBull(value);\n          },\n          options: [{\n            label: 'Выберите или введите...',\n            value: ''\n          }].concat(_toConsumableArray(bulls)),\n          error: errors.bull,\n          required: true,\n          zIndex: 2900\n        }), !bulls.some(function (b) {\n          return b.value === bull;\n        }) && bull !== '' && _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(TextInput, {\n            style: [styles.textInput, errors.bull && styles.inputError],\n            value: bull,\n            onChangeText: setBull,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u0431\\u044B\\u043A\\u0430\"\n          }), errors.bull && _jsx(HelperText, {\n            type: \"error\",\n            visible: !!errors.bull,\n            children: errors.bull\n          })]\n        })]\n      })\n    }), operationType === 'Вакцинация' && _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0432\\u0430\\u043A\\u0446\\u0438\\u043D\\u0430\\u0446\\u0438\\u0438\"\n        }), _jsx(SelectField, {\n          label: \"\\u0412\\u0430\\u043A\\u0446\\u0438\\u043D\\u0430\",\n          value: vaccine,\n          onChange: function onChange(value) {\n            return setVaccine(value);\n          },\n          options: [{\n            label: 'Выберите или введите...',\n            value: ''\n          }].concat(_toConsumableArray(vaccines)),\n          error: errors.vaccine,\n          required: true,\n          zIndex: 2900\n        }), !vaccines.some(function (v) {\n          return v.value === vaccine;\n        }) && vaccine !== '' && _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(TextInput, {\n            style: [styles.textInput, errors.vaccine && styles.inputError],\n            value: vaccine,\n            onChangeText: setVaccine,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0446\\u0438\\u043D\\u044B\"\n          }), errors.vaccine && _jsx(HelperText, {\n            type: \"error\",\n            visible: !!errors.vaccine,\n            children: errors.vaccine\n          })]\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u0414\\u043E\\u0437\\u0430\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            value: dose,\n            onChangeText: setDose,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043E\\u0437\\u0443\"\n          })]\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }), _jsx(SelectField, {\n          label: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\",\n          value: executorId,\n          onChange: function onChange(value) {\n            return setExecutorId(value);\n          },\n          options: [{\n            label: 'Не выбран',\n            value: -1\n          }].concat(_toConsumableArray(executors)),\n          zIndex: 2700\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            value: result,\n            onChangeText: setResult,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\"\n          })]\n        }), _jsxs(View, {\n          style: styles.formGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n          }), _jsx(TextInput, {\n            style: [styles.textInput, styles.textArea],\n            value: notes,\n            onChangeText: setNotes,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\",\n            multiline: true,\n            numberOfLines: 4\n          })]\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        mode: \"contained\",\n        onPress: handleSave,\n        loading: formSubmitting,\n        disabled: formSubmitting,\n        style: styles.saveButton,\n        children: isEditMode ? 'Сохранить изменения' : 'Добавить операцию'\n      }), _jsx(Button, {\n        mode: \"outlined\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        style: styles.cancelButton,\n        disabled: formSubmitting,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  card: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#424242'\n  },\n  animalInfoContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n    padding: 12,\n    backgroundColor: '#F5F5F5',\n    borderRadius: 4\n  },\n  animalInfoLabel: {\n    fontSize: 16,\n    marginRight: 8,\n    color: '#757575'\n  },\n  animalInfoValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#212121'\n  },\n  animalInfoError: {\n    fontSize: 16,\n    color: '#D32F2F'\n  },\n  formGroup: {\n    marginBottom: 16\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    color: '#424242'\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#BDBDBD',\n    borderRadius: 4,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: '#FFFFFF'\n  },\n  inputError: {\n    borderColor: '#D32F2F'\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top'\n  },\n  buttonsContainer: {\n    padding: 16,\n    marginBottom: 24\n  },\n  saveButton: {\n    marginBottom: 8\n  },\n  cancelButton: {\n    borderColor: '#BDBDBD'\n  }\n});\nexport default OperationFormScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","StyleSheet","Alert","Keyboard","TextInput","Text","Button","Card","HelperText","useNavigation","useRoute","getOperationById","addOperation","updateOperation","getAnimalById","updateAnimal","getAllExecutors","getAllBulls","getAllVaccines","getAllMedicines","getAllDiseases","OPERATION_TYPES","DatePickerField","SelectField","LoadingScreen","ErrorScreen","jsx","_jsx","jsxs","_jsxs","OperationFormScreen","navigation","route","_ref","params","operationId","animalId","date","isEditMode","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","formSubmitting","setFormSubmitting","_useState7","_useState8","animal","setAnimal","_useState9","_useState10","executors","setExecutors","_useState11","_useState12","bulls","setBulls","_useState13","_useState14","vaccines","setVaccines","_useState15","_useState16","medicines","setMedicines","_useState17","_useState18","diseases","setDiseases","_useState19","_useState20","selectedAnimalId","setSelectedAnimalId","_useState21","_useState22","operationType","setOperationType","_useState23","_useState24","operationDate","setOperationDate","_useState25","_useState26","diagnosis","setDiagnosis","_useState27","_useState28","medicine","setMedicine","_useState29","_useState30","dose","setDose","_useState31","_useState32","bull","setBull","_useState33","_useState34","vaccine","setVaccine","_useState35","_useState36","executorId","setExecutorId","_useState37","_useState38","result","setResult","_useState39","_useState40","notes","setNotes","_useState41","_useState42","errors","setErrors","loadData","_ref2","_asyncToGenerator","_yield$Promise$all","Promise","all","_yield$Promise$all2","executorsData","bullsData","vaccinesData","medicinesData","diseasesData","map","executor","label","name","value","id","number","disease","animalData","Date","toISOString","split","operation","Error","type","err","console","apply","arguments","validateForm","newErrors","Object","keys","length","handleSave","_ref3","dismiss","operationData","undefined","createdAt","updatedAt","_objectSpread","goBack","newOperationId","gender","animalToUpdate","lastInseminationDate","inseminationCount","lastDeliveryDate","lactationNumber","navigate","alert","message","onRetry","operationTypeOptions","entries","_ref4","_ref5","_","style","styles","container","children","card","Content","sectionTitle","animalInfoContainer","animalInfoLabel","animalInfoValue","animalInfoError","onChange","options","required","zIndex","concat","_toConsumableArray","some","d","formGroup","textInput","inputError","onChangeText","placeholder","visible","m","b","v","textArea","multiline","numberOfLines","buttonsContainer","mode","onPress","disabled","saveButton","cancelButton","create","flex","backgroundColor","margin","marginBottom","elevation","fontSize","fontWeight","color","flexDirection","alignItems","padding","borderRadius","marginRight","borderWidth","borderColor","height","textAlignVertical"],"sources":["C:/vet-assistant/src/screens/operations/OperationFormScreen.tsx"],"sourcesContent":["// src/screens/operations/OperationFormScreen.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, Alert, Keyboard, TextInput } from 'react-native';\r\nimport { Text, Button, Card, HelperText } from 'react-native-paper';\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { Operation, Animal } from '../../types';\r\nimport { getOperationById, addOperation, updateOperation } from '../../database/repositories/OperationRepository';\r\nimport { getAnimalById, updateAnimal } from '../../database/repositories/AnimalRepository';\r\nimport { getAllExecutors } from '../../database/repositories/ExecutorRepository';\r\nimport { getAllBulls } from '../../database/repositories/BullRepository';\r\nimport { getAllVaccines } from '../../database/repositories/VaccineRepository';\r\nimport { getAllMedicines } from '../../database/repositories/MedicineRepository';\r\nimport { getAllDiseases } from '../../database/repositories/DiseaseRepository';\r\nimport { AnimalStackParamList, CalendarStackParamList } from '../../navigation/MainNavigator';\r\nimport { OPERATION_TYPES } from '../../constants/appConstants';\r\nimport DatePickerField from '../../components/DatePickerField';\r\nimport SelectField from '../../components/SelectField';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport ErrorScreen from '../../components/ErrorScreen';\r\n\r\n// остальной код файла остается без изменений\r\n\r\ntype OperationFormScreenRouteProp = RouteProp<AnimalStackParamList | CalendarStackParamList, 'OperationForm'>;\r\ntype OperationFormScreenNavigationProp = NativeStackNavigationProp<AnimalStackParamList | CalendarStackParamList, 'OperationForm'>;\r\n\r\nconst OperationFormScreen: React.FC = () => {\r\n  const navigation = useNavigation<OperationFormScreenNavigationProp>();\r\n  const route = useRoute<OperationFormScreenRouteProp>();\r\n  const { operationId, animalId, date } = route.params || {};\r\n  const isEditMode = !!operationId;\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [formSubmitting, setFormSubmitting] = useState(false);\r\n  \r\n  // Данные животного\r\n  const [animal, setAnimal] = useState<Animal | null>(null);\r\n  \r\n  // Справочники\r\n  const [executors, setExecutors] = useState<{ label: string; value: number }[]>([]);\r\n  const [bulls, setBulls] = useState<{ label: string; value: string }[]>([]);\r\n  const [vaccines, setVaccines] = useState<{ label: string; value: string }[]>([]);\r\n  const [medicines, setMedicines] = useState<{ label: string; value: string }[]>([]);\r\n  const [diseases, setDiseases] = useState<{ label: string; value: string }[]>([]);\r\n  \r\n  // Форма операции\r\n  const [selectedAnimalId, setSelectedAnimalId] = useState<number | null>(null);\r\n  const [operationType, setOperationType] = useState('');\r\n  const [operationDate, setOperationDate] = useState<string | null>(null);\r\n  const [diagnosis, setDiagnosis] = useState('');\r\n  const [medicine, setMedicine] = useState('');\r\n  const [dose, setDose] = useState('');\r\n  const [bull, setBull] = useState('');\r\n  const [vaccine, setVaccine] = useState('');\r\n  const [executorId, setExecutorId] = useState<number | null>(null);\r\n  const [result, setResult] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n  \r\n  // Валидация\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  \r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Загружаем справочники\r\n        const [executorsData, bullsData, vaccinesData, medicinesData, diseasesData] = await Promise.all([\r\n          getAllExecutors(),\r\n          getAllBulls(),\r\n          getAllVaccines(),\r\n          getAllMedicines(),\r\n          getAllDiseases(),\r\n        ]);\r\n        \r\n        setExecutors(\r\n          executorsData.map(executor => ({\r\n            label: executor.name,\r\n            value: executor.id!,\r\n          }))\r\n        );\r\n        \r\n        setBulls(\r\n          bullsData.map(bull => ({\r\n            label: `${bull.name}${bull.number ? ` (${bull.number})` : ''}`,\r\n            value: bull.name,\r\n          }))\r\n        );\r\n        \r\n        setVaccines(\r\n          vaccinesData.map(vaccine => ({\r\n            label: vaccine.name,\r\n            value: vaccine.name,\r\n          }))\r\n        );\r\n        \r\n        setMedicines(\r\n          medicinesData.map(medicine => ({\r\n            label: medicine.name,\r\n            value: medicine.name,\r\n          }))\r\n        );\r\n        \r\n        setDiseases(\r\n          diseasesData.map(disease => ({\r\n            label: disease.name,\r\n            value: disease.name,\r\n          }))\r\n        );\r\n        \r\n        // Если указано животное, загружаем его данные\r\n        if (animalId) {\r\n          const animalData = await getAnimalById(animalId);\r\n          if (animalData) {\r\n            setAnimal(animalData);\r\n            setSelectedAnimalId(animalId);\r\n          }\r\n        }\r\n        \r\n        // Если указана дата (из календаря), устанавливаем её\r\n        if (date) {\r\n          setOperationDate(date);\r\n        } else if (!isEditMode) {\r\n          // По умолчанию устанавливаем текущую дату для новой операции\r\n          setOperationDate(new Date().toISOString().split('T')[0]);\r\n        }\r\n        \r\n        // Если редактируем операцию, загружаем её данные\r\n        if (isEditMode) {\r\n          const operation = await getOperationById(operationId);\r\n          if (!operation) {\r\n            throw new Error('Операция не найдена');\r\n          }\r\n          \r\n          // Загружаем данные животного\r\n          const animalData = await getAnimalById(operation.animalId);\r\n          if (animalData) {\r\n            setAnimal(animalData);\r\n          }\r\n          \r\n          setSelectedAnimalId(operation.animalId);\r\n          setOperationType(operation.type);\r\n          setOperationDate(operation.date);\r\n          setDiagnosis(operation.diagnosis || '');\r\n          setMedicine(operation.medicine || '');\r\n          setDose(operation.dose || '');\r\n          setBull(operation.bull || '');\r\n          setVaccine(operation.vaccine || '');\r\n          setExecutorId(operation.executorId || null);\r\n          setResult(operation.result || '');\r\n          setNotes(operation.notes || '');\r\n        }\r\n      } catch (err) {\r\n        setError('Не удалось загрузить данные');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, [isEditMode, operationId, animalId, date]);\r\n  \r\n  // Валидация формы\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!selectedAnimalId) {\r\n      newErrors.animalId = 'Животное обязательно';\r\n    }\r\n    \r\n    if (!operationType) {\r\n      newErrors.type = 'Тип операции обязателен';\r\n    }\r\n    \r\n    if (!operationDate) {\r\n      newErrors.date = 'Дата операции обязательна';\r\n    }\r\n    \r\n    if (operationType === 'Лечение' && !diagnosis) {\r\n      newErrors.diagnosis = 'Диагноз обязателен для лечения';\r\n    }\r\n    \r\n    if (operationType === 'Осеменение' && !bull) {\r\n      newErrors.bull = 'Бык обязателен для осеменения';\r\n    }\r\n    \r\n    if (operationType === 'Вакцинация' && !vaccine) {\r\n      newErrors.vaccine = 'Вакцина обязательна для вакцинации';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n  // Сохранение операции\r\n  const handleSave = async () => {\r\n    Keyboard.dismiss();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setFormSubmitting(true);\r\n      \r\n      const operationData: Omit<Operation, 'id'> = {\r\n        animalId: selectedAnimalId!,\r\n        type: operationType,\r\n        date: operationDate!,\r\n        diagnosis: diagnosis || undefined,\r\n        medicine: medicine || undefined,\r\n        dose: dose || undefined,\r\n        bull: bull || undefined,\r\n        vaccine: vaccine || undefined,\r\n        executorId: executorId || undefined,\r\n        result: result || undefined,\r\n        notes: notes || undefined,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      if (isEditMode) {\r\n        await updateOperation({ ...operationData, id: operationId });\r\n        navigation.goBack();\r\n      } else {\r\n        const newOperationId = await addOperation(operationData);\r\n        \r\n        // Если это женское животное, обновляем соответствующие даты\r\n        if (animal && animal.gender === 'female') {\r\n          const animalToUpdate: Partial<Animal> = { id: animal.id };\r\n          \r\n          if (operationType === 'Осеменение') {\r\n            animalToUpdate.lastInseminationDate = operationDate;\r\n            \r\n            // Если есть предыдущие осеменения, увеличиваем счетчик\r\n            if (animal.inseminationCount !== undefined) {\r\n              animalToUpdate.inseminationCount = animal.inseminationCount + 1;\r\n            } else {\r\n              animalToUpdate.inseminationCount = 1;\r\n            }\r\n          } else if (operationType === 'Отёл') {\r\n            animalToUpdate.lastDeliveryDate = operationDate;\r\n            \r\n            // Если есть номер лактации, увеличиваем его\r\n            if (animal.lactationNumber !== undefined) {\r\n              animalToUpdate.lactationNumber = animal.lactationNumber + 1;\r\n            } else {\r\n              animalToUpdate.lactationNumber = 1;\r\n            }\r\n          }\r\n          \r\n          // Обновляем данные животного, если были изменения\r\n          if (Object.keys(animalToUpdate).length > 1) {  // > 1, потому что id уже добавлен\r\n            await updateAnimal(animalToUpdate as Animal);\r\n          }\r\n        }\r\n        \r\n        navigation.navigate('OperationDetail', { operationId: newOperationId });\r\n      }\r\n    } catch (err) {\r\n      Alert.alert(\r\n        'Ошибка',\r\n        isEditMode\r\n          ? 'Не удалось обновить данные операции'\r\n          : 'Не удалось добавить новую операцию'\r\n      );\r\n      console.error(err);\r\n    } finally {\r\n      setFormSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <LoadingScreen message=\"Загрузка данных...\" />;\r\n  }\r\n  \r\n  if (error) {\r\n    return <ErrorScreen message={error} onRetry={() => navigation.goBack()} />;\r\n  }\r\n  \r\n  const operationTypeOptions = Object.entries(OPERATION_TYPES).map(([_, label]) => ({\r\n    label,\r\n    value: label,\r\n  }));\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Text style={styles.sectionTitle}>Информация об операции</Text>\r\n          \r\n          <View style={styles.animalInfoContainer}>\r\n            <Text style={styles.animalInfoLabel}>Животное:</Text>\r\n            {animal ? (\r\n              <Text style={styles.animalInfoValue}>\r\n                {animal.number} ({animal.type})\r\n              </Text>\r\n            ) : (\r\n              <Text style={styles.animalInfoError}>\r\n                Животное не выбрано\r\n              </Text>\r\n            )}\r\n          </View>\r\n          \r\n          <SelectField\r\n            label=\"Тип операции\"\r\n            value={operationType}\r\n            onChange={value => setOperationType(value as string)}\r\n            options={operationTypeOptions}\r\n            error={errors.type}\r\n            required\r\n            zIndex={3000}\r\n          />\r\n          \r\n          <DatePickerField\r\n            label=\"Дата операции\"\r\n            value={operationDate}\r\n            onChange={setOperationDate}\r\n            error={errors.date}\r\n            required\r\n          />\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      {operationType === 'Лечение' && (\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={styles.sectionTitle}>Информация о лечении</Text>\r\n            \r\n            <SelectField\r\n              label=\"Диагноз\"\r\n              value={diagnosis}\r\n              onChange={value => setDiagnosis(value as string)}\r\n              options={[\r\n                { label: 'Ввести вручную...', value: '' },\r\n                ...diseases,\r\n              ]}\r\n              error={errors.diagnosis}\r\n              required\r\n              zIndex={2900}\r\n            />\r\n            \r\n            {!diseases.some(d => d.value === diagnosis) && (\r\n              <View style={styles.formGroup}>\r\n                <TextInput\r\n                  style={[styles.textInput, errors.diagnosis && styles.inputError]}\r\n                  value={diagnosis}\r\n                  onChangeText={setDiagnosis}\r\n                  placeholder=\"Введите диагноз\"\r\n                />\r\n                {errors.diagnosis && (\r\n                  <HelperText type=\"error\" visible={!!errors.diagnosis}>\r\n                    {errors.diagnosis}\r\n                  </HelperText>\r\n                )}\r\n              </View>\r\n            )}\r\n            \r\n            <SelectField\r\n              label=\"Лекарство\"\r\n              value={medicine}\r\n              onChange={value => setMedicine(value as string)}\r\n              options={[\r\n                { label: 'Выберите или введите...', value: '' },\r\n                ...medicines,\r\n              ]}\r\n              zIndex={2800}\r\n            />\r\n            \r\n            {!medicines.some(m => m.value === medicine) && medicine !== '' && (\r\n              <View style={styles.formGroup}>\r\n                <TextInput\r\n                  style={styles.textInput}\r\n                  value={medicine}\r\n                  onChangeText={setMedicine}\r\n                  placeholder=\"Введите название лекарства\"\r\n                />\r\n              </View>\r\n            )}\r\n            \r\n            <View style={styles.formGroup}>\r\n              <Text style={styles.label}>Доза</Text>\r\n              <TextInput\r\n                style={styles.textInput}\r\n                value={dose}\r\n                onChangeText={setDose}\r\n                placeholder=\"Введите дозу\"\r\n              />\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n      \r\n      {operationType === 'Осеменение' && (\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={styles.sectionTitle}>Информация об осеменении</Text>\r\n            \r\n            <SelectField\r\n              label=\"Бык\"\r\n              value={bull}\r\n              onChange={value => setBull(value as string)}\r\n              options={[\r\n                { label: 'Выберите или введите...', value: '' },\r\n                ...bulls,\r\n              ]}\r\n              error={errors.bull}\r\n              required\r\n              zIndex={2900}\r\n            />\r\n            \r\n            {!bulls.some(b => b.value === bull) && bull !== '' && (\r\n              <View style={styles.formGroup}>\r\n                <TextInput\r\n                  style={[styles.textInput, errors.bull && styles.inputError]}\r\n                  value={bull}\r\n                  onChangeText={setBull}\r\n                  placeholder=\"Введите имя быка\"\r\n                />\r\n                {errors.bull && (\r\n                  <HelperText type=\"error\" visible={!!errors.bull}>\r\n                    {errors.bull}\r\n                  </HelperText>\r\n                )}\r\n              </View>\r\n            )}\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n      \r\n      {operationType === 'Вакцинация' && (\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={styles.sectionTitle}>Информация о вакцинации</Text>\r\n            \r\n            <SelectField\r\n              label=\"Вакцина\"\r\n              value={vaccine}\r\n              onChange={value => setVaccine(value as string)}\r\n              options={[\r\n                { label: 'Выберите или введите...', value: '' },\r\n                ...vaccines,\r\n              ]}\r\n              error={errors.vaccine}\r\n              required\r\n              zIndex={2900}\r\n            />\r\n            \r\n            {!vaccines.some(v => v.value === vaccine) && vaccine !== '' && (\r\n              <View style={styles.formGroup}>\r\n                <TextInput\r\n                  style={[styles.textInput, errors.vaccine && styles.inputError]}\r\n                  value={vaccine}\r\n                  onChangeText={setVaccine}\r\n                  placeholder=\"Введите название вакцины\"\r\n                />\r\n                {errors.vaccine && (\r\n                  <HelperText type=\"error\" visible={!!errors.vaccine}>\r\n                    {errors.vaccine}\r\n                  </HelperText>\r\n                )}\r\n              </View>\r\n            )}\r\n            \r\n            <View style={styles.formGroup}>\r\n              <Text style={styles.label}>Доза</Text>\r\n              <TextInput\r\n                style={styles.textInput}\r\n                value={dose}\r\n                onChangeText={setDose}\r\n                placeholder=\"Введите дозу\"\r\n              />\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n      \r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Text style={styles.sectionTitle}>Дополнительная информация</Text>\r\n          \r\n          <SelectField\r\n            label=\"Исполнитель\"\r\n            value={executorId}\r\n            onChange={value => setExecutorId(value as number)}\r\n            options={[\r\n              { label: 'Не выбран', value: -1 },\r\n              ...executors,\r\n            ]}\r\n            zIndex={2700}\r\n          />\r\n          \r\n          <View style={styles.formGroup}>\r\n            <Text style={styles.label}>Результат</Text>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              value={result}\r\n              onChangeText={setResult}\r\n              placeholder=\"Введите результат операции\"\r\n            />\r\n          </View>\r\n          \r\n          <View style={styles.formGroup}>\r\n            <Text style={styles.label}>Примечания</Text>\r\n            <TextInput\r\n              style={[styles.textInput, styles.textArea]}\r\n              value={notes}\r\n              onChangeText={setNotes}\r\n              placeholder=\"Введите примечания\"\r\n              multiline\r\n              numberOfLines={4}\r\n            />\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      <View style={styles.buttonsContainer}>\r\n        <Button\r\n          mode=\"contained\"\r\n          onPress={handleSave}\r\n          loading={formSubmitting}\r\n          disabled={formSubmitting}\r\n          style={styles.saveButton}\r\n        >\r\n          {isEditMode ? 'Сохранить изменения' : 'Добавить операцию'}\r\n        </Button>\r\n        \r\n        <Button\r\n          mode=\"outlined\"\r\n          onPress={() => navigation.goBack()}\r\n          style={styles.cancelButton}\r\n          disabled={formSubmitting}\r\n        >\r\n          Отмена\r\n        </Button>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  card: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n    elevation: 2,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    color: '#424242',\r\n  },\r\n  animalInfoContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n    padding: 12,\r\n    backgroundColor: '#F5F5F5',\r\n    borderRadius: 4,\r\n  },\r\n  animalInfoLabel: {\r\n    fontSize: 16,\r\n    marginRight: 8,\r\n    color: '#757575',\r\n  },\r\n  animalInfoValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#212121',\r\n  },\r\n  animalInfoError: {\r\n    fontSize: 16,\r\n    color: '#D32F2F',\r\n  },\r\n  formGroup: {\r\n    marginBottom: 16,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n    color: '#424242',\r\n  },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#BDBDBD',\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    fontSize: 16,\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  inputError: {\r\n    borderColor: '#D32F2F',\r\n  },\r\n  textArea: {\r\n    height: 100,\r\n    textAlignVertical: 'top',\r\n  },\r\n  buttonsContainer: {\r\n    padding: 16,\r\n    marginBottom: 24,\r\n  },\r\n  saveButton: {\r\n    marginBottom: 8,\r\n  },\r\n  cancelButton: {\r\n    borderColor: '#BDBDBD',\r\n  },\r\n});\r\n\r\nexport default OperationFormScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}